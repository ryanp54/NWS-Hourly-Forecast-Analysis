{"version":3,"sources":["dateUtilities.js","testData.js","App.js","serviceWorker.js","index.js"],"names":["getDaysAgo","days","date","Date","setDate","getDate","getISODate","toISOString","split","testData","API_URL","React","createElement","ForecastDayPicker","label","onChange","rest","useState","warned","setWarned","Col","className","Row","onDayChange","day","mod","disabled","dayPickerProps","disabledDays","before","after","DateRangeForm","onFetch","start","setStart","end","setEnd","Container","xs","value","md","Button","onClick","fetch","ErrorStatsDisplay","analysis","activeDay","activeDayDisplayText","stats","lead_days","cumulative_stats","Object","keys","map","type","prop","includes","LabeledValue","units","metadata","key","flat","filter","Boolean","Cursor","x","range","scale","y","style","stroke","strokeWidth","x1","x2","y1","Math","max","y2","min","MemodForecastChart","memo","chartedData","activeFcasts","push","displayName","color","leadDay","i","name","data","entries","fcasts","datum","opacity","obs","erreas","errors","reduce","timeStr","amount","time","erreaDatum","y0","lastErrea","length","slice","valueOf","errea","fill","legendSymbol","getActiveFcastsAndChartedData","legendData","chartedGroups","forecastGroup","find","group","props","otherGroups","dayLabel","line","children","child","theme","symbol","cursor","labels","isCharted","getLegendData","domainPadding","padding","top","bottom","left","right","containerComponent","voronoiDimension","labelComponent","onActivated","points","orientation","borderPadding","gutter","symbolSpacer","fontSize","toggleDisplayed","labelName","allFcastDays","newActiveDay","events","eventHandlers","evt","target","legend","tickCount","tickFormat","dateTime","getMonth","toLocaleTimeString","getHours","ticks","size","tickLabels","grid","offsetY","dependentAxis","crossAxis","axisLabelComponent","dx","angle","AnalysisChart","activeFcastDay","setActiveFcastDay","activeData","setActiveData","handleChange","useCallback","newActiveData","ActiveDataDisplay","displayInfo","formattedErrorDatum","_x","toLocaleString","dateStyle","timeStyle","formattedData","forEach","_y","childName","display_name","formattedValue","formatForDisplay","val","unit","round","toLowerCase","replace","match","toUpperCase","AnalysisPage","weather","setWeather","JSON","parse","setAnalysis","statusMessage","setStatusMessage","request","then","resp","json","catch","error","message","Tabs","activeKey","onSelect","justify","weatherType","Tab","eventKey","prop_name","title","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6253015.chunk.js","sourcesContent":["export function getLastMonthStart() {\r\n\tconst date = new Date();\r\n\tdate.setMonth(date.getMonth() - 1);\r\n\tdate.setDate(1);\r\n\treturn date;\r\n}\r\n\r\nexport function getLastMonthEnd() {\r\n\tconst date = new Date();\r\n\tdate.setDate(0);\r\n\treturn new Date(Math.min(date.valueOf(), getDaysAgo(2).valueOf()));\r\n}\r\n\r\nexport function getDaysAgo(days) {\r\n\tconst date = new Date();\r\n\tdate.setDate(date.getDate() - days);\r\n\treturn date;\r\n}\r\n\r\nexport function getISODate(date) {\r\n\treturn date.toISOString().split('T')[0];\r\n}\r\n\r\nexport function getISORoundHour(date) {\r\n\tconst dateCopy = new Date(date);\r\n\tif (date.getMinutes() >= 30) {\r\n\t\tdateCopy.setHours(date.getHours() + 1);\r\n\t}\r\n\tconst hours = dateCopy.toISOString().split('T')[1].split(':')[0];\r\n\treturn `${getISODate(date)}T${hours}:00`;\r\n}\r\n\r\nexport function parseToUTC(iso) {\r\n\tconst date = new Date(iso);\r\n\treturn new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours()));\r\n}\r\n\r\n// Simple deep merge solution from user y.c. on stackoverflow: https://stackoverflow.com/a/50228121\r\nexport function merge(current, update) {\r\n  Object.keys(update).forEach(function(key) {\r\n    // if update[key] exist, and it's not a string or array,\r\n    // we go in one level deeper\r\n    if (current.hasOwnProperty(key) \r\n        && typeof current[key] === 'object'\r\n        && !(current[key] instanceof Array)) {\r\n      merge(current[key], update[key]);\r\n\r\n    // if update[key] doesn't exist in current, or it's a string\r\n    // or array, then assign/overwrite current[key] to update[key]\r\n    } else {\r\n      current[key] = update[key];\r\n    }\r\n  });\r\n  return current;\r\n}\r\n","export const testData = `{\r\n  \"cloud_cover\": {\r\n    \"cumulative_stats\": {\r\n      \"accuracy\": {\r\n        \"accuracy\": 0.803030303030303, \r\n        \"error_threshold\": 24, \r\n        \"n\": 132\r\n      }, \r\n      \"ave_error\": {\r\n        \"error\": 7.196969696969699, \r\n        \"n\": 132\r\n      }, \r\n      \"bias\": {\r\n        \"bias\": 2.2727272727272725, \r\n        \"n\": 132\r\n      }\r\n    }, \r\n    \"lead_days\": {\r\n      \"1\": {\r\n        \"errors\": {\r\n          \"2019-03-11T01:00:00\": -25, \r\n          \"2019-03-11T02:00:00\": -25, \r\n          \"2019-03-11T03:00:00\": -25, \r\n          \"2019-03-11T04:00:00\": -25, \r\n          \"2019-03-11T05:00:00\": -25, \r\n          \"2019-03-11T06:00:00\": 25, \r\n          \"2019-03-11T07:00:00\": -25, \r\n          \"2019-03-11T08:00:00\": -25, \r\n          \"2019-03-11T09:00:00\": -50, \r\n          \"2019-03-11T10:00:00\": -50, \r\n          \"2019-03-11T13:00:00\": 25, \r\n          \"2019-03-11T14:00:00\": 25, \r\n          \"2019-03-11T15:00:00\": 25, \r\n          \"2019-03-11T16:00:00\": 25, \r\n          \"2019-03-13T21:00:00\": 25, \r\n          \"2019-03-13T22:00:00\": 50, \r\n          \"2019-03-13T23:00:00\": 50\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-11T00:00:00\": 50, \r\n          \"2019-03-11T01:00:00\": 100, \r\n          \"2019-03-11T02:00:00\": 100, \r\n          \"2019-03-11T03:00:00\": 100, \r\n          \"2019-03-11T04:00:00\": 100, \r\n          \"2019-03-11T05:00:00\": 100, \r\n          \"2019-03-11T06:00:00\": 25, \r\n          \"2019-03-11T07:00:00\": 75, \r\n          \"2019-03-11T08:00:00\": 100, \r\n          \"2019-03-11T09:00:00\": 100, \r\n          \"2019-03-11T10:00:00\": 100, \r\n          \"2019-03-11T11:00:00\": 50, \r\n          \"2019-03-11T12:00:00\": 25, \r\n          \"2019-03-11T13:00:00\": 25, \r\n          \"2019-03-11T14:00:00\": 25, \r\n          \"2019-03-11T15:00:00\": 25, \r\n          \"2019-03-11T16:00:00\": 25, \r\n          \"2019-03-11T17:00:00\": 25, \r\n          \"2019-03-11T18:00:00\": 25, \r\n          \"2019-03-11T19:00:00\": 25, \r\n          \"2019-03-11T20:00:00\": 25, \r\n          \"2019-03-11T21:00:00\": 25, \r\n          \"2019-03-11T22:00:00\": 25, \r\n          \"2019-03-11T23:00:00\": 25, \r\n          \"2019-03-12T12:00:00\": 100, \r\n          \"2019-03-12T13:00:00\": 100, \r\n          \"2019-03-12T14:00:00\": 100, \r\n          \"2019-03-12T15:00:00\": 100, \r\n          \"2019-03-12T16:00:00\": 100, \r\n          \"2019-03-12T17:00:00\": 100, \r\n          \"2019-03-12T18:00:00\": 100, \r\n          \"2019-03-12T19:00:00\": 100, \r\n          \"2019-03-12T20:00:00\": 100, \r\n          \"2019-03-12T21:00:00\": 100, \r\n          \"2019-03-12T22:00:00\": 100, \r\n          \"2019-03-12T23:00:00\": 100, \r\n          \"2019-03-13T00:00:00\": 100, \r\n          \"2019-03-13T01:00:00\": 100, \r\n          \"2019-03-13T02:00:00\": 100, \r\n          \"2019-03-13T03:00:00\": 100, \r\n          \"2019-03-13T04:00:00\": 100, \r\n          \"2019-03-13T05:00:00\": 100, \r\n          \"2019-03-13T06:00:00\": 100, \r\n          \"2019-03-13T07:00:00\": 100, \r\n          \"2019-03-13T08:00:00\": 100, \r\n          \"2019-03-13T09:00:00\": 100, \r\n          \"2019-03-13T10:00:00\": 100, \r\n          \"2019-03-13T11:00:00\": 100, \r\n          \"2019-03-13T12:00:00\": 100, \r\n          \"2019-03-13T13:00:00\": 100, \r\n          \"2019-03-13T14:00:00\": 100, \r\n          \"2019-03-13T15:00:00\": 100, \r\n          \"2019-03-13T16:00:00\": 100, \r\n          \"2019-03-13T17:00:00\": 100, \r\n          \"2019-03-13T18:00:00\": 100, \r\n          \"2019-03-13T19:00:00\": 100, \r\n          \"2019-03-13T20:00:00\": 100, \r\n          \"2019-03-13T21:00:00\": 50, \r\n          \"2019-03-13T22:00:00\": 25, \r\n          \"2019-03-13T23:00:00\": 25\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.7638888888888888, \r\n            \"error_threshold\": 24, \r\n            \"n\": 72\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 7.291666666666667, \r\n            \"n\": 72\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -0.347222222222223, \r\n            \"n\": 72\r\n          }\r\n        }\r\n      }, \r\n      \"2\": {\r\n        \"errors\": {\r\n          \"2019-03-12T02:00:00\": 25, \r\n          \"2019-03-12T03:00:00\": 25, \r\n          \"2019-03-12T06:00:00\": -25, \r\n          \"2019-03-12T07:00:00\": -25, \r\n          \"2019-03-13T22:00:00\": 75, \r\n          \"2019-03-13T23:00:00\": 50\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-12T00:00:00\": 25, \r\n          \"2019-03-12T01:00:00\": 25, \r\n          \"2019-03-12T02:00:00\": 25, \r\n          \"2019-03-12T03:00:00\": 25, \r\n          \"2019-03-12T04:00:00\": 75, \r\n          \"2019-03-12T05:00:00\": 75, \r\n          \"2019-03-12T06:00:00\": 100, \r\n          \"2019-03-12T07:00:00\": 100, \r\n          \"2019-03-12T08:00:00\": 100, \r\n          \"2019-03-12T09:00:00\": 100, \r\n          \"2019-03-12T10:00:00\": 100, \r\n          \"2019-03-12T11:00:00\": 100, \r\n          \"2019-03-12T12:00:00\": 100, \r\n          \"2019-03-12T13:00:00\": 100, \r\n          \"2019-03-12T14:00:00\": 100, \r\n          \"2019-03-12T15:00:00\": 100, \r\n          \"2019-03-12T16:00:00\": 100, \r\n          \"2019-03-12T17:00:00\": 100, \r\n          \"2019-03-12T18:00:00\": 100, \r\n          \"2019-03-12T19:00:00\": 100, \r\n          \"2019-03-12T20:00:00\": 100, \r\n          \"2019-03-12T21:00:00\": 100, \r\n          \"2019-03-12T22:00:00\": 100, \r\n          \"2019-03-12T23:00:00\": 100, \r\n          \"2019-03-13T12:00:00\": 100, \r\n          \"2019-03-13T13:00:00\": 100, \r\n          \"2019-03-13T14:00:00\": 100, \r\n          \"2019-03-13T15:00:00\": 100, \r\n          \"2019-03-13T16:00:00\": 100, \r\n          \"2019-03-13T17:00:00\": 100, \r\n          \"2019-03-13T18:00:00\": 100, \r\n          \"2019-03-13T19:00:00\": 100, \r\n          \"2019-03-13T20:00:00\": 100, \r\n          \"2019-03-13T21:00:00\": 50, \r\n          \"2019-03-13T22:00:00\": 25, \r\n          \"2019-03-13T23:00:00\": 25\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.8333333333333334, \r\n            \"error_threshold\": 24, \r\n            \"n\": 36\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 6.25, \r\n            \"n\": 36\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 3.4722222222222223, \r\n            \"n\": 36\r\n          }\r\n        }\r\n      }, \r\n      \"3\": {\r\n        \"errors\": {\r\n          \"2019-03-13T21:00:00\": 50, \r\n          \"2019-03-13T22:00:00\": 75, \r\n          \"2019-03-13T23:00:00\": 75\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-13T00:00:00\": 100, \r\n          \"2019-03-13T01:00:00\": 100, \r\n          \"2019-03-13T02:00:00\": 100, \r\n          \"2019-03-13T03:00:00\": 100, \r\n          \"2019-03-13T04:00:00\": 100, \r\n          \"2019-03-13T05:00:00\": 100, \r\n          \"2019-03-13T06:00:00\": 100, \r\n          \"2019-03-13T07:00:00\": 100, \r\n          \"2019-03-13T08:00:00\": 100, \r\n          \"2019-03-13T09:00:00\": 100, \r\n          \"2019-03-13T10:00:00\": 100, \r\n          \"2019-03-13T11:00:00\": 100, \r\n          \"2019-03-13T12:00:00\": 100, \r\n          \"2019-03-13T13:00:00\": 100, \r\n          \"2019-03-13T14:00:00\": 100, \r\n          \"2019-03-13T15:00:00\": 100, \r\n          \"2019-03-13T16:00:00\": 100, \r\n          \"2019-03-13T17:00:00\": 100, \r\n          \"2019-03-13T18:00:00\": 100, \r\n          \"2019-03-13T19:00:00\": 100, \r\n          \"2019-03-13T20:00:00\": 100, \r\n          \"2019-03-13T21:00:00\": 50, \r\n          \"2019-03-13T22:00:00\": 25, \r\n          \"2019-03-13T23:00:00\": 25\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.875, \r\n            \"error_threshold\": 24, \r\n            \"n\": 24\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 8.333333333333334, \r\n            \"n\": 24\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 8.333333333333334, \r\n            \"n\": 24\r\n          }\r\n        }\r\n      }, \r\n      \"4\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 24, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"5\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 24, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"6\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 24, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"7\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 24, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    \"metadata\": {\r\n      \"display_name\": \"Cloud Cover\", \r\n      \"error_threshold\": 24, \r\n      \"prop_name\": \"cloud_cover\", \r\n      \"units\": \"%\"\r\n    }, \r\n    \"obs\": {\r\n      \"2019-03-10T00:00:00\": 100, \r\n      \"2019-03-10T01:00:00\": 100, \r\n      \"2019-03-10T02:00:00\": 100, \r\n      \"2019-03-10T03:00:00\": 100, \r\n      \"2019-03-10T04:00:00\": 100, \r\n      \"2019-03-10T05:00:00\": 100, \r\n      \"2019-03-10T06:00:00\": 100, \r\n      \"2019-03-10T07:00:00\": 25, \r\n      \"2019-03-10T08:00:00\": 50, \r\n      \"2019-03-10T09:00:00\": 25, \r\n      \"2019-03-10T10:00:00\": 25, \r\n      \"2019-03-10T11:00:00\": 25, \r\n      \"2019-03-10T12:00:00\": 25, \r\n      \"2019-03-10T13:00:00\": 25, \r\n      \"2019-03-10T14:00:00\": 25, \r\n      \"2019-03-10T15:00:00\": 25, \r\n      \"2019-03-10T16:00:00\": 25, \r\n      \"2019-03-10T17:00:00\": 25, \r\n      \"2019-03-10T18:00:00\": 25, \r\n      \"2019-03-10T19:00:00\": 25, \r\n      \"2019-03-10T20:00:00\": 25, \r\n      \"2019-03-10T21:00:00\": 25, \r\n      \"2019-03-10T22:00:00\": 25, \r\n      \"2019-03-10T23:00:00\": 25, \r\n      \"2019-03-11T00:00:00\": 50, \r\n      \"2019-03-11T01:00:00\": 100, \r\n      \"2019-03-11T02:00:00\": 100, \r\n      \"2019-03-11T03:00:00\": 100, \r\n      \"2019-03-11T04:00:00\": 100, \r\n      \"2019-03-11T05:00:00\": 100, \r\n      \"2019-03-11T06:00:00\": 25, \r\n      \"2019-03-11T07:00:00\": 75, \r\n      \"2019-03-11T08:00:00\": 100, \r\n      \"2019-03-11T09:00:00\": 100, \r\n      \"2019-03-11T10:00:00\": 100, \r\n      \"2019-03-11T11:00:00\": 50, \r\n      \"2019-03-11T12:00:00\": 25, \r\n      \"2019-03-11T13:00:00\": 25, \r\n      \"2019-03-11T14:00:00\": 25, \r\n      \"2019-03-11T15:00:00\": 25, \r\n      \"2019-03-11T16:00:00\": 25, \r\n      \"2019-03-11T17:00:00\": 25, \r\n      \"2019-03-11T18:00:00\": 25, \r\n      \"2019-03-11T19:00:00\": 25, \r\n      \"2019-03-11T20:00:00\": 25, \r\n      \"2019-03-11T21:00:00\": 25, \r\n      \"2019-03-11T22:00:00\": 25, \r\n      \"2019-03-11T23:00:00\": 25, \r\n      \"2019-03-12T00:00:00\": 25, \r\n      \"2019-03-12T01:00:00\": 25, \r\n      \"2019-03-12T02:00:00\": 25, \r\n      \"2019-03-12T03:00:00\": 25, \r\n      \"2019-03-12T04:00:00\": 75, \r\n      \"2019-03-12T05:00:00\": 75, \r\n      \"2019-03-12T06:00:00\": 100, \r\n      \"2019-03-12T07:00:00\": 100, \r\n      \"2019-03-12T08:00:00\": 100, \r\n      \"2019-03-12T09:00:00\": 100, \r\n      \"2019-03-12T10:00:00\": 100, \r\n      \"2019-03-12T11:00:00\": 100, \r\n      \"2019-03-12T12:00:00\": 100, \r\n      \"2019-03-12T13:00:00\": 100, \r\n      \"2019-03-12T14:00:00\": 100, \r\n      \"2019-03-12T15:00:00\": 100, \r\n      \"2019-03-12T16:00:00\": 100, \r\n      \"2019-03-12T17:00:00\": 100, \r\n      \"2019-03-12T18:00:00\": 100, \r\n      \"2019-03-12T19:00:00\": 100, \r\n      \"2019-03-12T20:00:00\": 100, \r\n      \"2019-03-12T21:00:00\": 100, \r\n      \"2019-03-12T22:00:00\": 100, \r\n      \"2019-03-12T23:00:00\": 100, \r\n      \"2019-03-13T00:00:00\": 100, \r\n      \"2019-03-13T01:00:00\": 100, \r\n      \"2019-03-13T02:00:00\": 100, \r\n      \"2019-03-13T03:00:00\": 100, \r\n      \"2019-03-13T04:00:00\": 100, \r\n      \"2019-03-13T05:00:00\": 100, \r\n      \"2019-03-13T06:00:00\": 100, \r\n      \"2019-03-13T07:00:00\": 100, \r\n      \"2019-03-13T08:00:00\": 100, \r\n      \"2019-03-13T09:00:00\": 100, \r\n      \"2019-03-13T10:00:00\": 100, \r\n      \"2019-03-13T11:00:00\": 100, \r\n      \"2019-03-13T12:00:00\": 100, \r\n      \"2019-03-13T13:00:00\": 100, \r\n      \"2019-03-13T14:00:00\": 100, \r\n      \"2019-03-13T15:00:00\": 100, \r\n      \"2019-03-13T16:00:00\": 100, \r\n      \"2019-03-13T17:00:00\": 100, \r\n      \"2019-03-13T18:00:00\": 100, \r\n      \"2019-03-13T19:00:00\": 100, \r\n      \"2019-03-13T20:00:00\": 100, \r\n      \"2019-03-13T21:00:00\": 50, \r\n      \"2019-03-13T22:00:00\": 25, \r\n      \"2019-03-13T23:00:00\": 25\r\n    }\r\n  }, \r\n  \"dewpoint\": {\r\n    \"cumulative_stats\": {\r\n      \"accuracy\": {\r\n        \"accuracy\": 0.49242424242424243, \r\n        \"error_threshold\": 1.67, \r\n        \"n\": 132\r\n      }, \r\n      \"ave_error\": {\r\n        \"error\": 1.7902356902356888, \r\n        \"n\": 132\r\n      }, \r\n      \"bias\": {\r\n        \"bias\": -1.526767676767678, \r\n        \"n\": 132\r\n      }\r\n    }, \r\n    \"lead_days\": {\r\n      \"1\": {\r\n        \"errors\": {\r\n          \"2019-03-11T04:00:00\": -2.111111111111086, \r\n          \"2019-03-11T05:00:00\": -1.9111111111110972, \r\n          \"2019-03-11T08:00:00\": -1.8666666666666742, \r\n          \"2019-03-11T09:00:00\": -2.1666666666666288, \r\n          \"2019-03-11T10:00:00\": -2.2222222222222285, \r\n          \"2019-03-11T11:00:00\": -2.7777777777777715, \r\n          \"2019-03-11T12:00:00\": -3.077777777777783, \r\n          \"2019-03-11T13:00:00\": -2.577777777777783, \r\n          \"2019-03-11T14:00:00\": -2.066666666666663, \r\n          \"2019-03-11T17:00:00\": 2.96666666666664, \r\n          \"2019-03-11T19:00:00\": 2.066666666666663, \r\n          \"2019-03-11T20:00:00\": 1.9222222222222172, \r\n          \"2019-03-11T21:00:00\": 1.9222222222222172, \r\n          \"2019-03-12T23:00:00\": -2.01111111111112, \r\n          \"2019-03-13T00:00:00\": -2.111111111111086, \r\n          \"2019-03-13T01:00:00\": -2.911111111111097, \r\n          \"2019-03-13T02:00:00\": -3.111111111111086, \r\n          \"2019-03-13T03:00:00\": -2.2111111111111086, \r\n          \"2019-03-13T04:00:00\": -2.2111111111111086, \r\n          \"2019-03-13T07:00:00\": -1.955555555555577, \r\n          \"2019-03-13T09:00:00\": -1.8555555555555543, \r\n          \"2019-03-13T10:00:00\": -2.5, \r\n          \"2019-03-13T11:00:00\": -3.0, \r\n          \"2019-03-13T12:00:00\": -2.588888888888903, \r\n          \"2019-03-13T13:00:00\": -1.8333333333333144, \r\n          \"2019-03-13T20:00:00\": -2.7555555555555884, \r\n          \"2019-03-13T21:00:00\": -2.8555555555555543, \r\n          \"2019-03-13T22:00:00\": -2.7111111111111086\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-11T00:00:00\": -5.0, \r\n          \"2019-03-11T01:00:00\": -5.555555555555543, \r\n          \"2019-03-11T02:00:00\": -6.111111111111086, \r\n          \"2019-03-11T03:00:00\": -6.111111111111086, \r\n          \"2019-03-11T04:00:00\": -6.111111111111086, \r\n          \"2019-03-11T05:00:00\": -6.111111111111086, \r\n          \"2019-03-11T06:00:00\": -6.111111111111086, \r\n          \"2019-03-11T07:00:00\": -6.111111111111086, \r\n          \"2019-03-11T08:00:00\": -6.666666666666629, \r\n          \"2019-03-11T09:00:00\": -6.666666666666629, \r\n          \"2019-03-11T10:00:00\": -7.2222222222222285, \r\n          \"2019-03-11T11:00:00\": -7.7777777777777715, \r\n          \"2019-03-11T12:00:00\": -7.7777777777777715, \r\n          \"2019-03-11T13:00:00\": -7.7777777777777715, \r\n          \"2019-03-11T14:00:00\": -6.666666666666629, \r\n          \"2019-03-11T15:00:00\": -6.666666666666629, \r\n          \"2019-03-11T16:00:00\": -5.555555555555543, \r\n          \"2019-03-11T17:00:00\": -3.3333333333333144, \r\n          \"2019-03-11T18:00:00\": -3.3333333333333144, \r\n          \"2019-03-11T19:00:00\": -3.3333333333333144, \r\n          \"2019-03-11T20:00:00\": -2.7777777777777715, \r\n          \"2019-03-11T21:00:00\": -2.7777777777777715, \r\n          \"2019-03-11T22:00:00\": -2.7777777777777715, \r\n          \"2019-03-11T23:00:00\": -2.7777777777777715, \r\n          \"2019-03-12T12:00:00\": -0.5555555555555429, \r\n          \"2019-03-12T13:00:00\": 0.0, \r\n          \"2019-03-12T14:00:00\": 0.5555555555555429, \r\n          \"2019-03-12T15:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T16:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T17:00:00\": 2.2222222222222285, \r\n          \"2019-03-12T18:00:00\": 2.2222222222222285, \r\n          \"2019-03-12T19:00:00\": 2.7777777777777715, \r\n          \"2019-03-12T20:00:00\": 3.3333333333333712, \r\n          \"2019-03-12T21:00:00\": 3.888888888888914, \r\n          \"2019-03-12T22:00:00\": 3.888888888888914, \r\n          \"2019-03-12T23:00:00\": 3.888888888888914, \r\n          \"2019-03-13T00:00:00\": 3.888888888888914, \r\n          \"2019-03-13T01:00:00\": 3.888888888888914, \r\n          \"2019-03-13T02:00:00\": 6.111111111111143, \r\n          \"2019-03-13T03:00:00\": 3.888888888888914, \r\n          \"2019-03-13T04:00:00\": 5.555555555555543, \r\n          \"2019-03-13T05:00:00\": 5.555555555555543, \r\n          \"2019-03-13T06:00:00\": 5.0, \r\n          \"2019-03-13T07:00:00\": 5.555555555555543, \r\n          \"2019-03-13T08:00:00\": 4.444444444444457, \r\n          \"2019-03-13T09:00:00\": 5.555555555555543, \r\n          \"2019-03-13T10:00:00\": 6.111111111111143, \r\n          \"2019-03-13T11:00:00\": 5.0, \r\n          \"2019-03-13T12:00:00\": 6.111111111111143, \r\n          \"2019-03-13T13:00:00\": 6.666666666666686, \r\n          \"2019-03-13T14:00:00\": 7.7777777777777715, \r\n          \"2019-03-13T15:00:00\": 8.333333333333371, \r\n          \"2019-03-13T16:00:00\": 8.888888888888914, \r\n          \"2019-03-13T17:00:00\": 8.888888888888914, \r\n          \"2019-03-13T18:00:00\": 8.888888888888914, \r\n          \"2019-03-13T19:00:00\": 9.444444444444457, \r\n          \"2019-03-13T20:00:00\": 9.444444444444457, \r\n          \"2019-03-13T21:00:00\": 9.444444444444457, \r\n          \"2019-03-13T22:00:00\": 8.888888888888914, \r\n          \"2019-03-13T23:00:00\": 8.888888888888914\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.6111111111111112, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 72\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 1.4890432098765423, \r\n            \"n\": 72\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -1.0788580246913593, \r\n            \"n\": 72\r\n          }\r\n        }\r\n      }, \r\n      \"2\": {\r\n        \"errors\": {\r\n          \"2019-03-12T00:00:00\": 1.6777777777777487, \r\n          \"2019-03-12T10:00:00\": -2.02222222222224, \r\n          \"2019-03-12T16:00:00\": -1.7444444444444684, \r\n          \"2019-03-12T17:00:00\": -1.98888888888888, \r\n          \"2019-03-12T18:00:00\": -1.9333333333333371, \r\n          \"2019-03-12T19:00:00\": -2.3333333333333144, \r\n          \"2019-03-12T20:00:00\": -2.7333333333333485, \r\n          \"2019-03-12T21:00:00\": -3.3333333333333144, \r\n          \"2019-03-12T22:00:00\": -3.2777777777777715, \r\n          \"2019-03-12T23:00:00\": -3.1222222222222626, \r\n          \"2019-03-13T12:00:00\": -3.1444444444445026, \r\n          \"2019-03-13T13:00:00\": -2.944444444444457, \r\n          \"2019-03-13T14:00:00\": -3.54444444444448, \r\n          \"2019-03-13T15:00:00\": -2.6888888888888687, \r\n          \"2019-03-13T16:00:00\": -2.433333333333337, \r\n          \"2019-03-13T19:00:00\": -2.111111111111086, \r\n          \"2019-03-13T20:00:00\": -3.3111111111111313, \r\n          \"2019-03-13T21:00:00\": -3.411111111111097, \r\n          \"2019-03-13T22:00:00\": -2.7111111111111086, \r\n          \"2019-03-13T23:00:00\": -2.1666666666666288\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-12T00:00:00\": -2.2222222222222285, \r\n          \"2019-03-12T01:00:00\": -2.7777777777777715, \r\n          \"2019-03-12T02:00:00\": -2.7777777777777715, \r\n          \"2019-03-12T03:00:00\": -3.3333333333333144, \r\n          \"2019-03-12T04:00:00\": -3.3333333333333144, \r\n          \"2019-03-12T05:00:00\": -3.3333333333333144, \r\n          \"2019-03-12T06:00:00\": -3.3333333333333144, \r\n          \"2019-03-12T07:00:00\": -2.7777777777777715, \r\n          \"2019-03-12T08:00:00\": -2.7777777777777715, \r\n          \"2019-03-12T09:00:00\": -2.2222222222222285, \r\n          \"2019-03-12T10:00:00\": -2.2222222222222285, \r\n          \"2019-03-12T11:00:00\": -1.6666666666666288, \r\n          \"2019-03-12T12:00:00\": -1.6666666666666288, \r\n          \"2019-03-12T13:00:00\": -1.1111111111110858, \r\n          \"2019-03-12T14:00:00\": -0.5555555555555429, \r\n          \"2019-03-12T15:00:00\": 0.0, \r\n          \"2019-03-12T16:00:00\": 0.5555555555555429, \r\n          \"2019-03-12T17:00:00\": 1.1111111111111427, \r\n          \"2019-03-12T18:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T19:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T20:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T21:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T22:00:00\": 2.2222222222222285, \r\n          \"2019-03-12T23:00:00\": 2.7777777777777715, \r\n          \"2019-03-13T12:00:00\": 5.555555555555543, \r\n          \"2019-03-13T13:00:00\": 5.555555555555543, \r\n          \"2019-03-13T14:00:00\": 5.555555555555543, \r\n          \"2019-03-13T15:00:00\": 6.111111111111143, \r\n          \"2019-03-13T16:00:00\": 6.666666666666686, \r\n          \"2019-03-13T17:00:00\": 7.7777777777777715, \r\n          \"2019-03-13T18:00:00\": 8.333333333333371, \r\n          \"2019-03-13T19:00:00\": 8.888888888888914, \r\n          \"2019-03-13T20:00:00\": 8.888888888888914, \r\n          \"2019-03-13T21:00:00\": 8.888888888888914, \r\n          \"2019-03-13T22:00:00\": 8.888888888888914, \r\n          \"2019-03-13T23:00:00\": 8.333333333333371\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.44444444444444453, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 36\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 1.8910493827160495, \r\n            \"n\": 36\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -1.7453703703703747, \r\n            \"n\": 36\r\n          }\r\n        }\r\n      }, \r\n      \"3\": {\r\n        \"errors\": {\r\n          \"2019-03-13T00:00:00\": -2.6666666666666288, \r\n          \"2019-03-13T01:00:00\": -3.46666666666664, \r\n          \"2019-03-13T02:00:00\": -3.6666666666666288, \r\n          \"2019-03-13T03:00:00\": -2.7666666666666515, \r\n          \"2019-03-13T04:00:00\": -2.2111111111111086, \r\n          \"2019-03-13T05:00:00\": -2.2111111111111086, \r\n          \"2019-03-13T07:00:00\": -1.955555555555577, \r\n          \"2019-03-13T08:00:00\": -2.01111111111112, \r\n          \"2019-03-13T09:00:00\": -2.411111111111097, \r\n          \"2019-03-13T10:00:00\": -3.055555555555543, \r\n          \"2019-03-13T11:00:00\": -3.0, \r\n          \"2019-03-13T12:00:00\": -3.1444444444445026, \r\n          \"2019-03-13T13:00:00\": -2.3888888888888573, \r\n          \"2019-03-13T14:00:00\": -2.433333333333337, \r\n          \"2019-03-13T19:00:00\": -2.6666666666666288, \r\n          \"2019-03-13T20:00:00\": -3.8666666666666742, \r\n          \"2019-03-13T21:00:00\": -3.96666666666664, \r\n          \"2019-03-13T22:00:00\": -3.8222222222222513, \r\n          \"2019-03-13T23:00:00\": -2.7222222222222285\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-13T00:00:00\": 3.3333333333333712, \r\n          \"2019-03-13T01:00:00\": 3.3333333333333712, \r\n          \"2019-03-13T02:00:00\": 3.3333333333333712, \r\n          \"2019-03-13T03:00:00\": 3.3333333333333712, \r\n          \"2019-03-13T04:00:00\": 3.888888888888914, \r\n          \"2019-03-13T05:00:00\": 3.888888888888914, \r\n          \"2019-03-13T06:00:00\": 4.444444444444457, \r\n          \"2019-03-13T07:00:00\": 4.444444444444457, \r\n          \"2019-03-13T08:00:00\": 3.888888888888914, \r\n          \"2019-03-13T09:00:00\": 3.888888888888914, \r\n          \"2019-03-13T10:00:00\": 4.444444444444457, \r\n          \"2019-03-13T11:00:00\": 5.0, \r\n          \"2019-03-13T12:00:00\": 5.555555555555543, \r\n          \"2019-03-13T13:00:00\": 6.111111111111143, \r\n          \"2019-03-13T14:00:00\": 6.666666666666686, \r\n          \"2019-03-13T15:00:00\": 7.2222222222222285, \r\n          \"2019-03-13T16:00:00\": 7.7777777777777715, \r\n          \"2019-03-13T17:00:00\": 8.333333333333371, \r\n          \"2019-03-13T18:00:00\": 8.333333333333371, \r\n          \"2019-03-13T19:00:00\": 8.333333333333371, \r\n          \"2019-03-13T20:00:00\": 8.333333333333371, \r\n          \"2019-03-13T21:00:00\": 8.333333333333371, \r\n          \"2019-03-13T22:00:00\": 7.7777777777777715, \r\n          \"2019-03-13T23:00:00\": 7.7777777777777715\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.20833333333333334, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 24\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 2.5425925925925883, \r\n            \"n\": 24\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -2.5425925925925883, \r\n            \"n\": 24\r\n          }\r\n        }\r\n      }, \r\n      \"4\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"5\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"6\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"7\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    \"metadata\": {\r\n      \"display_name\": \"Dewpoint\", \r\n      \"error_threshold\": 1.67, \r\n      \"prop_name\": \"dewpoint\", \r\n      \"units\": \"°C\"\r\n    }, \r\n    \"obs\": {\r\n      \"2019-03-10T00:00:00\": -1.599999999999966, \r\n      \"2019-03-10T01:00:00\": -2.099999999999966, \r\n      \"2019-03-10T02:00:00\": -3.099999999999966, \r\n      \"2019-03-10T03:00:00\": -3.5, \r\n      \"2019-03-10T04:00:00\": -3.6999999999999886, \r\n      \"2019-03-10T05:00:00\": -4.0, \r\n      \"2019-03-10T06:00:00\": -4.099999999999966, \r\n      \"2019-03-10T07:00:00\": -4.599999999999966, \r\n      \"2019-03-10T08:00:00\": -4.699999999999989, \r\n      \"2019-03-10T09:00:00\": -7.199999999999989, \r\n      \"2019-03-10T10:00:00\": -8.099999999999966, \r\n      \"2019-03-10T11:00:00\": -8.699999999999989, \r\n      \"2019-03-10T12:00:00\": -9.0, \r\n      \"2019-03-10T13:00:00\": -9.099999999999966, \r\n      \"2019-03-10T14:00:00\": -8.899999999999977, \r\n      \"2019-03-10T15:00:00\": -8.699999999999989, \r\n      \"2019-03-10T16:00:00\": -8.299999999999955, \r\n      \"2019-03-10T17:00:00\": -8.0, \r\n      \"2019-03-10T18:00:00\": -7.5, \r\n      \"2019-03-10T19:00:00\": -7.5, \r\n      \"2019-03-10T20:00:00\": -7.5, \r\n      \"2019-03-10T21:00:00\": -7.099999999999966, \r\n      \"2019-03-10T22:00:00\": -7.099999999999966, \r\n      \"2019-03-10T23:00:00\": -6.7999999999999545, \r\n      \"2019-03-11T00:00:00\": -6.599999999999966, \r\n      \"2019-03-11T01:00:00\": -6.199999999999989, \r\n      \"2019-03-11T02:00:00\": -5.0, \r\n      \"2019-03-11T03:00:00\": -4.599999999999966, \r\n      \"2019-03-11T04:00:00\": -4.0, \r\n      \"2019-03-11T05:00:00\": -4.199999999999989, \r\n      \"2019-03-11T06:00:00\": -4.699999999999989, \r\n      \"2019-03-11T07:00:00\": -5.099999999999966, \r\n      \"2019-03-11T08:00:00\": -4.7999999999999545, \r\n      \"2019-03-11T09:00:00\": -4.5, \r\n      \"2019-03-11T10:00:00\": -5.0, \r\n      \"2019-03-11T11:00:00\": -5.0, \r\n      \"2019-03-11T12:00:00\": -4.699999999999989, \r\n      \"2019-03-11T13:00:00\": -5.199999999999989, \r\n      \"2019-03-11T14:00:00\": -4.599999999999966, \r\n      \"2019-03-11T15:00:00\": -5.099999999999966, \r\n      \"2019-03-11T16:00:00\": -5.399999999999977, \r\n      \"2019-03-11T17:00:00\": -6.2999999999999545, \r\n      \"2019-03-11T18:00:00\": -5.0, \r\n      \"2019-03-11T19:00:00\": -5.399999999999977, \r\n      \"2019-03-11T20:00:00\": -4.699999999999989, \r\n      \"2019-03-11T21:00:00\": -4.699999999999989, \r\n      \"2019-03-11T22:00:00\": -3.6999999999999886, \r\n      \"2019-03-11T23:00:00\": -3.1999999999999886, \r\n      \"2019-03-12T00:00:00\": -3.8999999999999773, \r\n      \"2019-03-12T01:00:00\": -3.6999999999999886, \r\n      \"2019-03-12T02:00:00\": -2.7999999999999545, \r\n      \"2019-03-12T03:00:00\": -2.7999999999999545, \r\n      \"2019-03-12T04:00:00\": -2.6999999999999886, \r\n      \"2019-03-12T05:00:00\": -2.6999999999999886, \r\n      \"2019-03-12T06:00:00\": -2.5, \r\n      \"2019-03-12T07:00:00\": -2.5, \r\n      \"2019-03-12T08:00:00\": -1.5, \r\n      \"2019-03-12T09:00:00\": -1.099999999999966, \r\n      \"2019-03-12T10:00:00\": -0.19999999999998863, \r\n      \"2019-03-12T11:00:00\": -0.0999999999999659, \r\n      \"2019-03-12T12:00:00\": 0.0, \r\n      \"2019-03-12T13:00:00\": 0.0, \r\n      \"2019-03-12T14:00:00\": 0.5, \r\n      \"2019-03-12T15:00:00\": 1.2000000000000455, \r\n      \"2019-03-12T16:00:00\": 2.3000000000000114, \r\n      \"2019-03-12T17:00:00\": 3.1000000000000227, \r\n      \"2019-03-12T18:00:00\": 3.6000000000000227, \r\n      \"2019-03-12T19:00:00\": 4.0, \r\n      \"2019-03-12T20:00:00\": 4.400000000000034, \r\n      \"2019-03-12T21:00:00\": 5.0, \r\n      \"2019-03-12T22:00:00\": 5.5, \r\n      \"2019-03-12T23:00:00\": 5.900000000000034, \r\n      \"2019-03-13T00:00:00\": 6.0, \r\n      \"2019-03-13T01:00:00\": 6.800000000000011, \r\n      \"2019-03-13T02:00:00\": 7.0, \r\n      \"2019-03-13T03:00:00\": 6.100000000000023, \r\n      \"2019-03-13T04:00:00\": 6.100000000000023, \r\n      \"2019-03-13T05:00:00\": 6.100000000000023, \r\n      \"2019-03-13T06:00:00\": 6.100000000000023, \r\n      \"2019-03-13T07:00:00\": 6.400000000000034, \r\n      \"2019-03-13T08:00:00\": 5.900000000000034, \r\n      \"2019-03-13T09:00:00\": 6.300000000000011, \r\n      \"2019-03-13T10:00:00\": 7.5, \r\n      \"2019-03-13T11:00:00\": 8.0, \r\n      \"2019-03-13T12:00:00\": 8.700000000000045, \r\n      \"2019-03-13T13:00:00\": 8.5, \r\n      \"2019-03-13T14:00:00\": 9.100000000000023, \r\n      \"2019-03-13T15:00:00\": 8.800000000000011, \r\n      \"2019-03-13T16:00:00\": 9.100000000000023, \r\n      \"2019-03-13T17:00:00\": 9.200000000000045, \r\n      \"2019-03-13T18:00:00\": 9.5, \r\n      \"2019-03-13T19:00:00\": 11.0, \r\n      \"2019-03-13T20:00:00\": 12.200000000000045, \r\n      \"2019-03-13T21:00:00\": 12.300000000000011, \r\n      \"2019-03-13T22:00:00\": 11.600000000000023, \r\n      \"2019-03-13T23:00:00\": 10.5\r\n    }\r\n  }, \r\n  \"precip_6hr\": {\r\n    \"cumulative_stats\": {\r\n      \"accuracy\": {\r\n        \"accuracy\": 0.5333333333333333, \r\n        \"error_threshold\": 2.54, \r\n        \"n\": 15\r\n      }, \r\n      \"ave_error\": {\r\n        \"error\": 2.7344000000000004, \r\n        \"n\": 15\r\n      }, \r\n      \"bias\": {\r\n        \"bias\": 0.3639999999999997, \r\n        \"n\": 15\r\n      }\r\n    }, \r\n    \"lead_days\": {\r\n      \"1\": {\r\n        \"errors\": {\r\n          \"2019-03-12T18:00:00\": -4.852, \r\n          \"2019-03-13T12:00:00\": 2.758, \r\n          \"2019-03-13T18:00:00\": -5.824\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-11T00:00:00\": 0.0, \r\n          \"2019-03-11T01:00:00\": null, \r\n          \"2019-03-11T02:00:00\": null, \r\n          \"2019-03-11T03:00:00\": null, \r\n          \"2019-03-11T04:00:00\": null, \r\n          \"2019-03-11T05:00:00\": null, \r\n          \"2019-03-11T06:00:00\": 0.0, \r\n          \"2019-03-11T07:00:00\": null, \r\n          \"2019-03-11T08:00:00\": null, \r\n          \"2019-03-11T09:00:00\": null, \r\n          \"2019-03-11T10:00:00\": null, \r\n          \"2019-03-11T11:00:00\": null, \r\n          \"2019-03-11T12:00:00\": 0.0, \r\n          \"2019-03-11T13:00:00\": null, \r\n          \"2019-03-11T14:00:00\": null, \r\n          \"2019-03-11T15:00:00\": null, \r\n          \"2019-03-11T16:00:00\": null, \r\n          \"2019-03-11T17:00:00\": null, \r\n          \"2019-03-11T18:00:00\": 0.0, \r\n          \"2019-03-11T19:00:00\": null, \r\n          \"2019-03-11T20:00:00\": null, \r\n          \"2019-03-11T21:00:00\": null, \r\n          \"2019-03-11T22:00:00\": null, \r\n          \"2019-03-11T23:00:00\": null, \r\n          \"2019-03-12T12:00:00\": 0.0, \r\n          \"2019-03-12T13:00:00\": null, \r\n          \"2019-03-12T14:00:00\": null, \r\n          \"2019-03-12T15:00:00\": null, \r\n          \"2019-03-12T16:00:00\": null, \r\n          \"2019-03-12T17:00:00\": null, \r\n          \"2019-03-12T18:00:00\": 3.048, \r\n          \"2019-03-12T19:00:00\": null, \r\n          \"2019-03-12T20:00:00\": null, \r\n          \"2019-03-12T21:00:00\": null, \r\n          \"2019-03-12T22:00:00\": null, \r\n          \"2019-03-12T23:00:00\": null, \r\n          \"2019-03-13T00:00:00\": 1.27, \r\n          \"2019-03-13T01:00:00\": null, \r\n          \"2019-03-13T02:00:00\": null, \r\n          \"2019-03-13T03:00:00\": null, \r\n          \"2019-03-13T04:00:00\": null, \r\n          \"2019-03-13T05:00:00\": null, \r\n          \"2019-03-13T06:00:00\": 1.778, \r\n          \"2019-03-13T07:00:00\": null, \r\n          \"2019-03-13T08:00:00\": null, \r\n          \"2019-03-13T09:00:00\": null, \r\n          \"2019-03-13T10:00:00\": null, \r\n          \"2019-03-13T11:00:00\": null, \r\n          \"2019-03-13T12:00:00\": 6.8580000000000005, \r\n          \"2019-03-13T13:00:00\": null, \r\n          \"2019-03-13T14:00:00\": null, \r\n          \"2019-03-13T15:00:00\": null, \r\n          \"2019-03-13T16:00:00\": null, \r\n          \"2019-03-13T17:00:00\": null, \r\n          \"2019-03-13T18:00:00\": 11.176, \r\n          \"2019-03-13T19:00:00\": null, \r\n          \"2019-03-13T20:00:00\": null, \r\n          \"2019-03-13T21:00:00\": null, \r\n          \"2019-03-13T22:00:00\": null, \r\n          \"2019-03-13T23:00:00\": null\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.5714285714285714, \r\n            \"error_threshold\": 2.54, \r\n            \"n\": 7\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 2.6548571428571424, \r\n            \"n\": 7\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -0.3954285714285715, \r\n            \"n\": 7\r\n          }\r\n        }\r\n      }, \r\n      \"2\": {\r\n        \"errors\": {\r\n          \"2019-03-12T18:00:00\": -3.5820000000000007, \r\n          \"2019-03-13T12:00:00\": 3.5199999999999987\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-12T00:00:00\": 0.0, \r\n          \"2019-03-12T01:00:00\": null, \r\n          \"2019-03-12T02:00:00\": null, \r\n          \"2019-03-12T03:00:00\": null, \r\n          \"2019-03-12T04:00:00\": null, \r\n          \"2019-03-12T05:00:00\": null, \r\n          \"2019-03-12T06:00:00\": 0.0, \r\n          \"2019-03-12T07:00:00\": null, \r\n          \"2019-03-12T08:00:00\": null, \r\n          \"2019-03-12T09:00:00\": null, \r\n          \"2019-03-12T10:00:00\": null, \r\n          \"2019-03-12T11:00:00\": null, \r\n          \"2019-03-12T12:00:00\": 1.016, \r\n          \"2019-03-12T13:00:00\": null, \r\n          \"2019-03-12T14:00:00\": null, \r\n          \"2019-03-12T15:00:00\": null, \r\n          \"2019-03-12T16:00:00\": null, \r\n          \"2019-03-12T17:00:00\": null, \r\n          \"2019-03-12T18:00:00\": 4.318, \r\n          \"2019-03-12T19:00:00\": null, \r\n          \"2019-03-12T20:00:00\": null, \r\n          \"2019-03-12T21:00:00\": null, \r\n          \"2019-03-12T22:00:00\": null, \r\n          \"2019-03-12T23:00:00\": null, \r\n          \"2019-03-13T12:00:00\": 7.619999999999999, \r\n          \"2019-03-13T13:00:00\": null, \r\n          \"2019-03-13T14:00:00\": null, \r\n          \"2019-03-13T15:00:00\": null, \r\n          \"2019-03-13T16:00:00\": null, \r\n          \"2019-03-13T17:00:00\": null, \r\n          \"2019-03-13T18:00:00\": 15.239999999999998, \r\n          \"2019-03-13T19:00:00\": null, \r\n          \"2019-03-13T20:00:00\": null, \r\n          \"2019-03-13T21:00:00\": null, \r\n          \"2019-03-13T22:00:00\": null, \r\n          \"2019-03-13T23:00:00\": null\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.5, \r\n            \"error_threshold\": 2.54, \r\n            \"n\": 4\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 2.4695, \r\n            \"n\": 4\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -0.2015000000000009, \r\n            \"n\": 4\r\n          }\r\n        }\r\n      }, \r\n      \"3\": {\r\n        \"errors\": {\r\n          \"2019-03-13T06:00:00\": 3.51, \r\n          \"2019-03-13T12:00:00\": 6.06\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-13T00:00:00\": 1.524, \r\n          \"2019-03-13T01:00:00\": null, \r\n          \"2019-03-13T02:00:00\": null, \r\n          \"2019-03-13T03:00:00\": null, \r\n          \"2019-03-13T04:00:00\": null, \r\n          \"2019-03-13T05:00:00\": null, \r\n          \"2019-03-13T06:00:00\": 3.8099999999999996, \r\n          \"2019-03-13T07:00:00\": null, \r\n          \"2019-03-13T08:00:00\": null, \r\n          \"2019-03-13T09:00:00\": null, \r\n          \"2019-03-13T10:00:00\": null, \r\n          \"2019-03-13T11:00:00\": null, \r\n          \"2019-03-13T12:00:00\": 10.16, \r\n          \"2019-03-13T13:00:00\": null, \r\n          \"2019-03-13T14:00:00\": null, \r\n          \"2019-03-13T15:00:00\": null, \r\n          \"2019-03-13T16:00:00\": null, \r\n          \"2019-03-13T17:00:00\": null, \r\n          \"2019-03-13T18:00:00\": 15.239999999999998, \r\n          \"2019-03-13T19:00:00\": null, \r\n          \"2019-03-13T20:00:00\": null, \r\n          \"2019-03-13T21:00:00\": null, \r\n          \"2019-03-13T22:00:00\": null, \r\n          \"2019-03-13T23:00:00\": null\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.5, \r\n            \"error_threshold\": 2.54, \r\n            \"n\": 4\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 3.1385000000000005, \r\n            \"n\": 4\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 2.2584999999999997, \r\n            \"n\": 4\r\n          }\r\n        }\r\n      }, \r\n      \"4\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 2.54, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"5\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 2.54, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"6\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 2.54, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"7\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 2.54, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    \"metadata\": {\r\n      \"display_name\": \"6-Hour Precipitation Amount\", \r\n      \"error_threshold\": 2.54, \r\n      \"prop_name\": \"precip_6hr\", \r\n      \"units\": \"mm\"\r\n    }, \r\n    \"obs\": {\r\n      \"2019-03-10T00:00:00\": 0.0003, \r\n      \"2019-03-10T01:00:00\": null, \r\n      \"2019-03-10T02:00:00\": null, \r\n      \"2019-03-10T03:00:00\": null, \r\n      \"2019-03-10T04:00:00\": null, \r\n      \"2019-03-10T05:00:00\": null, \r\n      \"2019-03-10T06:00:00\": 0.0, \r\n      \"2019-03-10T07:00:00\": null, \r\n      \"2019-03-10T08:00:00\": null, \r\n      \"2019-03-10T09:00:00\": null, \r\n      \"2019-03-10T10:00:00\": null, \r\n      \"2019-03-10T11:00:00\": null, \r\n      \"2019-03-10T12:00:00\": 0.0, \r\n      \"2019-03-10T13:00:00\": null, \r\n      \"2019-03-10T14:00:00\": null, \r\n      \"2019-03-10T15:00:00\": null, \r\n      \"2019-03-10T16:00:00\": null, \r\n      \"2019-03-10T17:00:00\": null, \r\n      \"2019-03-10T18:00:00\": 0.0, \r\n      \"2019-03-10T19:00:00\": null, \r\n      \"2019-03-10T20:00:00\": null, \r\n      \"2019-03-10T21:00:00\": null, \r\n      \"2019-03-10T22:00:00\": null, \r\n      \"2019-03-10T23:00:00\": null, \r\n      \"2019-03-11T00:00:00\": 0.0, \r\n      \"2019-03-11T01:00:00\": null, \r\n      \"2019-03-11T02:00:00\": null, \r\n      \"2019-03-11T03:00:00\": null, \r\n      \"2019-03-11T04:00:00\": null, \r\n      \"2019-03-11T05:00:00\": null, \r\n      \"2019-03-11T06:00:00\": 0.0, \r\n      \"2019-03-11T07:00:00\": null, \r\n      \"2019-03-11T08:00:00\": null, \r\n      \"2019-03-11T09:00:00\": null, \r\n      \"2019-03-11T10:00:00\": null, \r\n      \"2019-03-11T11:00:00\": null, \r\n      \"2019-03-11T12:00:00\": 0.0, \r\n      \"2019-03-11T13:00:00\": null, \r\n      \"2019-03-11T14:00:00\": null, \r\n      \"2019-03-11T15:00:00\": null, \r\n      \"2019-03-11T16:00:00\": null, \r\n      \"2019-03-11T17:00:00\": null, \r\n      \"2019-03-11T18:00:00\": 0.0, \r\n      \"2019-03-11T19:00:00\": null, \r\n      \"2019-03-11T20:00:00\": null, \r\n      \"2019-03-11T21:00:00\": null, \r\n      \"2019-03-11T22:00:00\": null, \r\n      \"2019-03-11T23:00:00\": null, \r\n      \"2019-03-12T00:00:00\": 0.0, \r\n      \"2019-03-12T01:00:00\": null, \r\n      \"2019-03-12T02:00:00\": null, \r\n      \"2019-03-12T03:00:00\": null, \r\n      \"2019-03-12T04:00:00\": null, \r\n      \"2019-03-12T05:00:00\": null, \r\n      \"2019-03-12T06:00:00\": 0.0, \r\n      \"2019-03-12T07:00:00\": null, \r\n      \"2019-03-12T08:00:00\": null, \r\n      \"2019-03-12T09:00:00\": null, \r\n      \"2019-03-12T10:00:00\": null, \r\n      \"2019-03-12T11:00:00\": null, \r\n      \"2019-03-12T12:00:00\": 0.0, \r\n      \"2019-03-12T13:00:00\": null, \r\n      \"2019-03-12T14:00:00\": null, \r\n      \"2019-03-12T15:00:00\": null, \r\n      \"2019-03-12T16:00:00\": null, \r\n      \"2019-03-12T17:00:00\": null, \r\n      \"2019-03-12T18:00:00\": 0.0079, \r\n      \"2019-03-12T19:00:00\": null, \r\n      \"2019-03-12T20:00:00\": null, \r\n      \"2019-03-12T21:00:00\": null, \r\n      \"2019-03-12T22:00:00\": null, \r\n      \"2019-03-12T23:00:00\": null, \r\n      \"2019-03-13T00:00:00\": 0.0003, \r\n      \"2019-03-13T01:00:00\": null, \r\n      \"2019-03-13T02:00:00\": null, \r\n      \"2019-03-13T03:00:00\": null, \r\n      \"2019-03-13T04:00:00\": null, \r\n      \"2019-03-13T05:00:00\": null, \r\n      \"2019-03-13T06:00:00\": 0.0003, \r\n      \"2019-03-13T07:00:00\": null, \r\n      \"2019-03-13T08:00:00\": null, \r\n      \"2019-03-13T09:00:00\": null, \r\n      \"2019-03-13T10:00:00\": null, \r\n      \"2019-03-13T11:00:00\": null, \r\n      \"2019-03-13T12:00:00\": 0.0041, \r\n      \"2019-03-13T13:00:00\": null, \r\n      \"2019-03-13T14:00:00\": null, \r\n      \"2019-03-13T15:00:00\": null, \r\n      \"2019-03-13T16:00:00\": null, \r\n      \"2019-03-13T17:00:00\": null, \r\n      \"2019-03-13T18:00:00\": 0.017, \r\n      \"2019-03-13T19:00:00\": null, \r\n      \"2019-03-13T20:00:00\": null, \r\n      \"2019-03-13T21:00:00\": null, \r\n      \"2019-03-13T22:00:00\": null, \r\n      \"2019-03-13T23:00:00\": null\r\n    }\r\n  }, \r\n  \"precip_chance\": {\r\n    \"cumulative_stats\": {\r\n      \"bin_count\": {\r\n        \"bias\": 1.28762711864, \r\n        \"bins\": {\r\n          \"0\": 0, \r\n          \"10\": 0, \r\n          \"100\": 34, \r\n          \"20\": 0, \r\n          \"30\": 2, \r\n          \"40\": 4, \r\n          \"50\": 3, \r\n          \"60\": 2, \r\n          \"70\": 4, \r\n          \"80\": 10\r\n        }\r\n      }\r\n    }, \r\n    \"lead_days\": {\r\n      \"1\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"bin_count\": {\r\n            \"bias\": 0.953125, \r\n            \"bins\": {\r\n              \"0\": 0, \r\n              \"10\": 0, \r\n              \"100\": 14, \r\n              \"20\": 0, \r\n              \"30\": 2, \r\n              \"40\": 4, \r\n              \"50\": 3, \r\n              \"60\": 2, \r\n              \"70\": 4, \r\n              \"80\": 3\r\n            }\r\n          }\r\n        }\r\n      }, \r\n      \"2\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"bin_count\": {\r\n            \"bias\": 2.423, \r\n            \"bins\": {\r\n              \"0\": 0, \r\n              \"10\": 0, \r\n              \"100\": 8, \r\n              \"20\": 0, \r\n              \"30\": 0, \r\n              \"40\": 0, \r\n              \"50\": 0, \r\n              \"60\": 0, \r\n              \"70\": 0, \r\n              \"80\": 2\r\n            }\r\n          }\r\n        }\r\n      }, \r\n      \"3\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"bin_count\": {\r\n            \"bias\": 1.24941176471, \r\n            \"bins\": {\r\n              \"0\": 0, \r\n              \"10\": 0, \r\n              \"100\": 12, \r\n              \"20\": 0, \r\n              \"30\": 0, \r\n              \"40\": 0, \r\n              \"50\": 0, \r\n              \"60\": 0, \r\n              \"70\": 0, \r\n              \"80\": 5\r\n            }\r\n          }\r\n        }\r\n      }, \r\n      \"4\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"bin_count\": {\r\n            \"bias\": 0, \r\n            \"bins\": {\r\n              \"0\": 0, \r\n              \"10\": 0, \r\n              \"100\": 0, \r\n              \"20\": 0, \r\n              \"30\": 0, \r\n              \"40\": 0, \r\n              \"50\": 0, \r\n              \"60\": 0, \r\n              \"70\": 0, \r\n              \"80\": 0\r\n            }\r\n          }\r\n        }\r\n      }, \r\n      \"5\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"bin_count\": {\r\n            \"bias\": 0, \r\n            \"bins\": {\r\n              \"0\": 0, \r\n              \"10\": 0, \r\n              \"100\": 0, \r\n              \"20\": 0, \r\n              \"30\": 0, \r\n              \"40\": 0, \r\n              \"50\": 0, \r\n              \"60\": 0, \r\n              \"70\": 0, \r\n              \"80\": 0\r\n            }\r\n          }\r\n        }\r\n      }, \r\n      \"6\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"bin_count\": {\r\n            \"bias\": 0, \r\n            \"bins\": {\r\n              \"0\": 0, \r\n              \"10\": 0, \r\n              \"100\": 0, \r\n              \"20\": 0, \r\n              \"30\": 0, \r\n              \"40\": 0, \r\n              \"50\": 0, \r\n              \"60\": 0, \r\n              \"70\": 0, \r\n              \"80\": 0\r\n            }\r\n          }\r\n        }\r\n      }, \r\n      \"7\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"bin_count\": {\r\n            \"bias\": 0, \r\n            \"bins\": {\r\n              \"0\": 0, \r\n              \"10\": 0, \r\n              \"100\": 0, \r\n              \"20\": 0, \r\n              \"30\": 0, \r\n              \"40\": 0, \r\n              \"50\": 0, \r\n              \"60\": 0, \r\n              \"70\": 0, \r\n              \"80\": 0\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    \"metadata\": {\r\n      \"display_name\": \"Precipitation Chance\", \r\n      \"prop_name\": \"precip_chance\", \r\n      \"units\": \"%\"\r\n    }, \r\n    \"obs\": {}\r\n  }, \r\n  \"temperature\": {\r\n    \"cumulative_stats\": {\r\n      \"accuracy\": {\r\n        \"accuracy\": 0.5, \r\n        \"error_threshold\": 1.67, \r\n        \"n\": 132\r\n      }, \r\n      \"ave_error\": {\r\n        \"error\": 1.8019360269360292, \r\n        \"n\": 132\r\n      }, \r\n      \"bias\": {\r\n        \"bias\": -1.5672558922558961, \r\n        \"n\": 132\r\n      }\r\n    }, \r\n    \"lead_days\": {\r\n      \"1\": {\r\n        \"errors\": {\r\n          \"2019-03-11T00:00:00\": -1.8000000000000114, \r\n          \"2019-03-11T01:00:00\": -2.3111111111111313, \r\n          \"2019-03-11T02:00:00\": -2.877777777777794, \r\n          \"2019-03-11T03:00:00\": -3.1333333333333258, \r\n          \"2019-03-11T04:00:00\": -2.8888888888888573, \r\n          \"2019-03-11T05:00:00\": -1.8333333333333144, \r\n          \"2019-03-11T06:00:00\": -2.088888888888903, \r\n          \"2019-03-11T08:00:00\": -1.8444444444444912, \r\n          \"2019-03-11T09:00:00\": -3.555555555555543, \r\n          \"2019-03-11T10:00:00\": -4.311111111111131, \r\n          \"2019-03-11T11:00:00\": -4.52222222222224, \r\n          \"2019-03-11T12:00:00\": -4.122222222222263, \r\n          \"2019-03-11T13:00:00\": -3.2222222222222285, \r\n          \"2019-03-11T14:00:00\": -3.611111111111086, \r\n          \"2019-03-11T15:00:00\": -5.5, \r\n          \"2019-03-11T16:00:00\": -3.8222222222222513, \r\n          \"2019-03-11T17:00:00\": -2.5, \r\n          \"2019-03-11T23:00:00\": -2.2777777777777715, \r\n          \"2019-03-12T12:00:00\": -2.7888888888888914, \r\n          \"2019-03-12T13:00:00\": -2.2333333333333485, \r\n          \"2019-03-12T14:00:00\": -1.8777777777777942, \r\n          \"2019-03-12T15:00:00\": -1.7222222222222285, \r\n          \"2019-03-13T02:00:00\": -2.400000000000034, \r\n          \"2019-03-13T05:00:00\": -1.955555555555577, \r\n          \"2019-03-13T06:00:00\": -2.055555555555543, \r\n          \"2019-03-13T07:00:00\": -2.2555555555555884, \r\n          \"2019-03-13T10:00:00\": -2.2444444444444684, \r\n          \"2019-03-13T11:00:00\": -2.7444444444444684, \r\n          \"2019-03-13T21:00:00\": -2.3222222222221944, \r\n          \"2019-03-13T22:00:00\": -3.7222222222221717, \r\n          \"2019-03-13T23:00:00\": -3.2222222222221717\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-11T00:00:00\": 0.0, \r\n          \"2019-03-11T01:00:00\": -1.1111111111110858, \r\n          \"2019-03-11T02:00:00\": -2.7777777777777715, \r\n          \"2019-03-11T03:00:00\": -3.3333333333333144, \r\n          \"2019-03-11T04:00:00\": -3.8888888888888573, \r\n          \"2019-03-11T05:00:00\": -3.3333333333333144, \r\n          \"2019-03-11T06:00:00\": -3.8888888888888573, \r\n          \"2019-03-11T07:00:00\": -3.8888888888888573, \r\n          \"2019-03-11T08:00:00\": -4.444444444444457, \r\n          \"2019-03-11T09:00:00\": -5.555555555555543, \r\n          \"2019-03-11T10:00:00\": -6.111111111111086, \r\n          \"2019-03-11T11:00:00\": -7.2222222222222285, \r\n          \"2019-03-11T12:00:00\": -7.2222222222222285, \r\n          \"2019-03-11T13:00:00\": -7.2222222222222285, \r\n          \"2019-03-11T14:00:00\": -6.111111111111086, \r\n          \"2019-03-11T15:00:00\": -5.0, \r\n          \"2019-03-11T16:00:00\": -2.2222222222222285, \r\n          \"2019-03-11T17:00:00\": 0.0, \r\n          \"2019-03-11T18:00:00\": 2.2222222222222285, \r\n          \"2019-03-11T19:00:00\": 3.888888888888914, \r\n          \"2019-03-11T20:00:00\": 4.444444444444457, \r\n          \"2019-03-11T21:00:00\": 4.444444444444457, \r\n          \"2019-03-11T22:00:00\": 3.3333333333333712, \r\n          \"2019-03-11T23:00:00\": 2.2222222222222285, \r\n          \"2019-03-12T12:00:00\": 1.1111111111111427, \r\n          \"2019-03-12T13:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T14:00:00\": 2.2222222222222285, \r\n          \"2019-03-12T15:00:00\": 2.7777777777777715, \r\n          \"2019-03-12T16:00:00\": 2.7777777777777715, \r\n          \"2019-03-12T17:00:00\": 3.3333333333333712, \r\n          \"2019-03-12T18:00:00\": 3.3333333333333712, \r\n          \"2019-03-12T19:00:00\": 3.888888888888914, \r\n          \"2019-03-12T20:00:00\": 4.444444444444457, \r\n          \"2019-03-12T21:00:00\": 5.0, \r\n          \"2019-03-12T22:00:00\": 5.555555555555543, \r\n          \"2019-03-12T23:00:00\": 5.555555555555543, \r\n          \"2019-03-13T00:00:00\": 5.555555555555543, \r\n          \"2019-03-13T01:00:00\": 5.555555555555543, \r\n          \"2019-03-13T02:00:00\": 7.2222222222222285, \r\n          \"2019-03-13T03:00:00\": 5.0, \r\n          \"2019-03-13T04:00:00\": 7.2222222222222285, \r\n          \"2019-03-13T05:00:00\": 7.2222222222222285, \r\n          \"2019-03-13T06:00:00\": 7.2222222222222285, \r\n          \"2019-03-13T07:00:00\": 7.2222222222222285, \r\n          \"2019-03-13T08:00:00\": 5.0, \r\n          \"2019-03-13T09:00:00\": 6.666666666666686, \r\n          \"2019-03-13T10:00:00\": 6.666666666666686, \r\n          \"2019-03-13T11:00:00\": 5.555555555555543, \r\n          \"2019-03-13T12:00:00\": 7.7777777777777715, \r\n          \"2019-03-13T13:00:00\": 7.7777777777777715, \r\n          \"2019-03-13T14:00:00\": 8.333333333333371, \r\n          \"2019-03-13T15:00:00\": 8.888888888888914, \r\n          \"2019-03-13T16:00:00\": 10.0, \r\n          \"2019-03-13T17:00:00\": 10.555555555555543, \r\n          \"2019-03-13T18:00:00\": 11.111111111111143, \r\n          \"2019-03-13T19:00:00\": 12.222222222222285, \r\n          \"2019-03-13T20:00:00\": 12.222222222222285, \r\n          \"2019-03-13T21:00:00\": 12.777777777777828, \r\n          \"2019-03-13T22:00:00\": 12.777777777777828, \r\n          \"2019-03-13T23:00:00\": 12.777777777777828\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.5694444444444443, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 72\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 1.6751543209876567, \r\n            \"n\": 72\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -1.4109567901234632, \r\n            \"n\": 72\r\n          }\r\n        }\r\n      }, \r\n      \"2\": {\r\n        \"errors\": {\r\n          \"2019-03-12T00:00:00\": -3.7444444444444684, \r\n          \"2019-03-12T01:00:00\": -4.055555555555543, \r\n          \"2019-03-12T02:00:00\": -3.8666666666666742, \r\n          \"2019-03-12T03:00:00\": -3.422222222222274, \r\n          \"2019-03-12T04:00:00\": -3.422222222222274, \r\n          \"2019-03-12T05:00:00\": -2.566666666666663, \r\n          \"2019-03-12T06:00:00\": -3.46666666666664, \r\n          \"2019-03-12T07:00:00\": -3.111111111111086, \r\n          \"2019-03-12T08:00:00\": -3.2555555555555884, \r\n          \"2019-03-12T09:00:00\": -3.2000000000000455, \r\n          \"2019-03-12T10:00:00\": -3.2444444444444684, \r\n          \"2019-03-12T11:00:00\": -2.6888888888888687, \r\n          \"2019-03-12T12:00:00\": -1.6777777777778056, \r\n          \"2019-03-12T13:00:00\": -2.7888888888888914, \r\n          \"2019-03-12T14:00:00\": -2.98888888888888, \r\n          \"2019-03-12T15:00:00\": -2.8333333333333144, \r\n          \"2019-03-13T12:00:00\": -2.8888888888888573, \r\n          \"2019-03-13T13:00:00\": -2.6888888888888687, \r\n          \"2019-03-13T14:00:00\": -2.7333333333333485, \r\n          \"2019-03-13T18:00:00\": 1.866666666666731, \r\n          \"2019-03-13T21:00:00\": -2.3222222222221944, \r\n          \"2019-03-13T22:00:00\": -3.1666666666666288, \r\n          \"2019-03-13T23:00:00\": -2.6666666666666288\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-12T00:00:00\": 0.5555555555555429, \r\n          \"2019-03-12T01:00:00\": -0.5555555555555429, \r\n          \"2019-03-12T02:00:00\": -1.6666666666666288, \r\n          \"2019-03-12T03:00:00\": -2.2222222222222285, \r\n          \"2019-03-12T04:00:00\": -2.2222222222222285, \r\n          \"2019-03-12T05:00:00\": -1.6666666666666288, \r\n          \"2019-03-12T06:00:00\": -1.6666666666666288, \r\n          \"2019-03-12T07:00:00\": -1.1111111111110858, \r\n          \"2019-03-12T08:00:00\": -0.5555555555555429, \r\n          \"2019-03-12T09:00:00\": 0.0, \r\n          \"2019-03-12T10:00:00\": 0.5555555555555429, \r\n          \"2019-03-12T11:00:00\": 1.1111111111111427, \r\n          \"2019-03-12T12:00:00\": 2.2222222222222285, \r\n          \"2019-03-12T13:00:00\": 1.1111111111111427, \r\n          \"2019-03-12T14:00:00\": 1.1111111111111427, \r\n          \"2019-03-12T15:00:00\": 1.6666666666666856, \r\n          \"2019-03-12T16:00:00\": 2.2222222222222285, \r\n          \"2019-03-12T17:00:00\": 2.7777777777777715, \r\n          \"2019-03-12T18:00:00\": 3.888888888888914, \r\n          \"2019-03-12T19:00:00\": 4.444444444444457, \r\n          \"2019-03-12T20:00:00\": 5.0, \r\n          \"2019-03-12T21:00:00\": 6.111111111111143, \r\n          \"2019-03-12T22:00:00\": 6.111111111111143, \r\n          \"2019-03-12T23:00:00\": 6.666666666666686, \r\n          \"2019-03-13T12:00:00\": 6.111111111111143, \r\n          \"2019-03-13T13:00:00\": 6.111111111111143, \r\n          \"2019-03-13T14:00:00\": 6.666666666666686, \r\n          \"2019-03-13T15:00:00\": 7.7777777777777715, \r\n          \"2019-03-13T16:00:00\": 8.888888888888914, \r\n          \"2019-03-13T17:00:00\": 10.0, \r\n          \"2019-03-13T18:00:00\": 11.666666666666742, \r\n          \"2019-03-13T19:00:00\": 12.222222222222285, \r\n          \"2019-03-13T20:00:00\": 12.777777777777828, \r\n          \"2019-03-13T21:00:00\": 12.777777777777828, \r\n          \"2019-03-13T22:00:00\": 13.333333333333371, \r\n          \"2019-03-13T23:00:00\": 13.333333333333371\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.3611111111111111, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 36\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 2.134876543209881, \r\n            \"n\": 36\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -1.8595679012345654, \r\n            \"n\": 36\r\n          }\r\n        }\r\n      }, \r\n      \"3\": {\r\n        \"errors\": {\r\n          \"2019-03-13T02:00:00\": -2.400000000000034, \r\n          \"2019-03-13T03:00:00\": -2.055555555555543, \r\n          \"2019-03-13T04:00:00\": -2.055555555555543, \r\n          \"2019-03-13T10:00:00\": -1.6888888888888687, \r\n          \"2019-03-13T11:00:00\": -2.1888888888888687, \r\n          \"2019-03-13T12:00:00\": -2.3333333333333144, \r\n          \"2019-03-13T13:00:00\": -2.1333333333333258, \r\n          \"2019-03-13T14:00:00\": -2.7333333333333485, \r\n          \"2019-03-13T15:00:00\": -1.8777777777777942, \r\n          \"2019-03-13T21:00:00\": -3.98888888888888, \r\n          \"2019-03-13T22:00:00\": -4.8333333333332575, \r\n          \"2019-03-13T23:00:00\": -3.2222222222221717\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-13T00:00:00\": 6.666666666666686, \r\n          \"2019-03-13T01:00:00\": 5.555555555555543, \r\n          \"2019-03-13T02:00:00\": 5.0, \r\n          \"2019-03-13T03:00:00\": 4.444444444444457, \r\n          \"2019-03-13T04:00:00\": 4.444444444444457, \r\n          \"2019-03-13T05:00:00\": 5.555555555555543, \r\n          \"2019-03-13T06:00:00\": 5.555555555555543, \r\n          \"2019-03-13T07:00:00\": 6.111111111111143, \r\n          \"2019-03-13T08:00:00\": 6.111111111111143, \r\n          \"2019-03-13T09:00:00\": 5.555555555555543, \r\n          \"2019-03-13T10:00:00\": 6.111111111111143, \r\n          \"2019-03-13T11:00:00\": 6.111111111111143, \r\n          \"2019-03-13T12:00:00\": 6.666666666666686, \r\n          \"2019-03-13T13:00:00\": 6.666666666666686, \r\n          \"2019-03-13T14:00:00\": 6.666666666666686, \r\n          \"2019-03-13T15:00:00\": 7.2222222222222285, \r\n          \"2019-03-13T16:00:00\": 8.333333333333371, \r\n          \"2019-03-13T17:00:00\": 9.444444444444457, \r\n          \"2019-03-13T18:00:00\": 10.555555555555543, \r\n          \"2019-03-13T19:00:00\": 11.111111111111143, \r\n          \"2019-03-13T20:00:00\": 11.111111111111143, \r\n          \"2019-03-13T21:00:00\": 11.111111111111143, \r\n          \"2019-03-13T22:00:00\": 11.666666666666742, \r\n          \"2019-03-13T23:00:00\": 12.777777777777828\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.5, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 24\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 1.6828703703703691, \r\n            \"n\": 24\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": -1.5976851851851872, \r\n            \"n\": 24\r\n          }\r\n        }\r\n      }, \r\n      \"4\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"5\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"6\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"7\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.67, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    \"metadata\": {\r\n      \"display_name\": \"Temperature\", \r\n      \"error_threshold\": 1.67, \r\n      \"prop_name\": \"temperature\", \r\n      \"units\": \"°C\"\r\n    }, \r\n    \"obs\": {\r\n      \"2019-03-10T00:00:00\": 2.0, \r\n      \"2019-03-10T01:00:00\": 1.6000000000000227, \r\n      \"2019-03-10T02:00:00\": 1.1000000000000227, \r\n      \"2019-03-10T03:00:00\": 1.0, \r\n      \"2019-03-10T04:00:00\": 0.5, \r\n      \"2019-03-10T05:00:00\": 0.10000000000002274, \r\n      \"2019-03-10T06:00:00\": 0.0, \r\n      \"2019-03-10T07:00:00\": -0.39999999999997726, \r\n      \"2019-03-10T08:00:00\": -1.0, \r\n      \"2019-03-10T09:00:00\": -2.0, \r\n      \"2019-03-10T10:00:00\": -3.0, \r\n      \"2019-03-10T11:00:00\": -3.7999999999999545, \r\n      \"2019-03-10T12:00:00\": -4.199999999999989, \r\n      \"2019-03-10T13:00:00\": -5.099999999999966, \r\n      \"2019-03-10T14:00:00\": -3.599999999999966, \r\n      \"2019-03-10T15:00:00\": -2.7999999999999545, \r\n      \"2019-03-10T16:00:00\": -2.099999999999966, \r\n      \"2019-03-10T17:00:00\": -1.0, \r\n      \"2019-03-10T18:00:00\": -0.2999999999999545, \r\n      \"2019-03-10T19:00:00\": 0.5, \r\n      \"2019-03-10T20:00:00\": 1.2000000000000455, \r\n      \"2019-03-10T21:00:00\": 2.0, \r\n      \"2019-03-10T22:00:00\": 2.5, \r\n      \"2019-03-10T23:00:00\": 2.6000000000000227, \r\n      \"2019-03-11T00:00:00\": 1.8000000000000114, \r\n      \"2019-03-11T01:00:00\": 1.2000000000000455, \r\n      \"2019-03-11T02:00:00\": 0.10000000000002274, \r\n      \"2019-03-11T03:00:00\": -0.19999999999998863, \r\n      \"2019-03-11T04:00:00\": -1.0, \r\n      \"2019-03-11T05:00:00\": -1.5, \r\n      \"2019-03-11T06:00:00\": -1.7999999999999545, \r\n      \"2019-03-11T07:00:00\": -3.5, \r\n      \"2019-03-11T08:00:00\": -2.599999999999966, \r\n      \"2019-03-11T09:00:00\": -2.0, \r\n      \"2019-03-11T10:00:00\": -1.7999999999999545, \r\n      \"2019-03-11T11:00:00\": -2.6999999999999886, \r\n      \"2019-03-11T12:00:00\": -3.099999999999966, \r\n      \"2019-03-11T13:00:00\": -4.0, \r\n      \"2019-03-11T14:00:00\": -2.5, \r\n      \"2019-03-11T15:00:00\": 0.5, \r\n      \"2019-03-11T16:00:00\": 1.6000000000000227, \r\n      \"2019-03-11T17:00:00\": 2.5, \r\n      \"2019-03-11T18:00:00\": 3.1000000000000227, \r\n      \"2019-03-11T19:00:00\": 3.7000000000000455, \r\n      \"2019-03-11T20:00:00\": 4.0, \r\n      \"2019-03-11T21:00:00\": 4.800000000000011, \r\n      \"2019-03-11T22:00:00\": 4.7000000000000455, \r\n      \"2019-03-11T23:00:00\": 4.5, \r\n      \"2019-03-12T00:00:00\": 4.300000000000011, \r\n      \"2019-03-12T01:00:00\": 3.5, \r\n      \"2019-03-12T02:00:00\": 2.2000000000000455, \r\n      \"2019-03-12T03:00:00\": 1.2000000000000455, \r\n      \"2019-03-12T04:00:00\": 1.2000000000000455, \r\n      \"2019-03-12T05:00:00\": 0.9000000000000341, \r\n      \"2019-03-12T06:00:00\": 1.8000000000000114, \r\n      \"2019-03-12T07:00:00\": 2.0, \r\n      \"2019-03-12T08:00:00\": 2.7000000000000455, \r\n      \"2019-03-12T09:00:00\": 3.2000000000000455, \r\n      \"2019-03-12T10:00:00\": 3.8000000000000114, \r\n      \"2019-03-12T11:00:00\": 3.8000000000000114, \r\n      \"2019-03-12T12:00:00\": 3.900000000000034, \r\n      \"2019-03-12T13:00:00\": 3.900000000000034, \r\n      \"2019-03-12T14:00:00\": 4.100000000000023, \r\n      \"2019-03-12T15:00:00\": 4.5, \r\n      \"2019-03-12T16:00:00\": 3.5, \r\n      \"2019-03-12T17:00:00\": 4.0, \r\n      \"2019-03-12T18:00:00\": 4.5, \r\n      \"2019-03-12T19:00:00\": 4.600000000000023, \r\n      \"2019-03-12T20:00:00\": 5.0, \r\n      \"2019-03-12T21:00:00\": 5.300000000000011, \r\n      \"2019-03-12T22:00:00\": 5.900000000000034, \r\n      \"2019-03-12T23:00:00\": 6.300000000000011, \r\n      \"2019-03-13T00:00:00\": 6.400000000000034, \r\n      \"2019-03-13T01:00:00\": 7.2000000000000455, \r\n      \"2019-03-13T02:00:00\": 7.400000000000034, \r\n      \"2019-03-13T03:00:00\": 6.5, \r\n      \"2019-03-13T04:00:00\": 6.5, \r\n      \"2019-03-13T05:00:00\": 6.400000000000034, \r\n      \"2019-03-13T06:00:00\": 6.5, \r\n      \"2019-03-13T07:00:00\": 6.7000000000000455, \r\n      \"2019-03-13T08:00:00\": 6.2000000000000455, \r\n      \"2019-03-13T09:00:00\": 6.600000000000023, \r\n      \"2019-03-13T10:00:00\": 7.800000000000011, \r\n      \"2019-03-13T11:00:00\": 8.300000000000011, \r\n      \"2019-03-13T12:00:00\": 9.0, \r\n      \"2019-03-13T13:00:00\": 8.800000000000011, \r\n      \"2019-03-13T14:00:00\": 9.400000000000034, \r\n      \"2019-03-13T15:00:00\": 9.100000000000023, \r\n      \"2019-03-13T16:00:00\": 9.400000000000034, \r\n      \"2019-03-13T17:00:00\": 9.5, \r\n      \"2019-03-13T18:00:00\": 9.800000000000011, \r\n      \"2019-03-13T19:00:00\": 11.200000000000045, \r\n      \"2019-03-13T20:00:00\": 12.600000000000023, \r\n      \"2019-03-13T21:00:00\": 15.100000000000023, \r\n      \"2019-03-13T22:00:00\": 16.5, \r\n      \"2019-03-13T23:00:00\": 16.0\r\n    }\r\n  }, \r\n  \"wind_dir\": {\r\n    \"cumulative_stats\": {\r\n      \"accuracy\": {\r\n        \"accuracy\": 0.9814814814814815, \r\n        \"error_threshold\": 45, \r\n        \"n\": 108\r\n      }, \r\n      \"ave_error\": {\r\n        \"error\": 16.203703703703706, \r\n        \"n\": 108\r\n      }, \r\n      \"bias\": {\r\n        \"bias\": 10.64814814814815, \r\n        \"n\": 108\r\n      }\r\n    }, \r\n    \"lead_days\": {\r\n      \"1\": {\r\n        \"errors\": {\r\n          \"2019-03-11T00:00:00\": 70, \r\n          \"2019-03-11T06:00:00\": 50\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-11T00:00:00\": 320, \r\n          \"2019-03-11T06:00:00\": 210, \r\n          \"2019-03-11T15:00:00\": 190, \r\n          \"2019-03-11T16:00:00\": 190, \r\n          \"2019-03-11T17:00:00\": 190, \r\n          \"2019-03-11T18:00:00\": 180, \r\n          \"2019-03-11T20:00:00\": 170, \r\n          \"2019-03-11T21:00:00\": 170, \r\n          \"2019-03-11T22:00:00\": 150, \r\n          \"2019-03-11T23:00:00\": 130, \r\n          \"2019-03-12T12:00:00\": 150, \r\n          \"2019-03-12T13:00:00\": 150, \r\n          \"2019-03-12T14:00:00\": 150, \r\n          \"2019-03-12T15:00:00\": 150, \r\n          \"2019-03-12T16:00:00\": 150, \r\n          \"2019-03-12T17:00:00\": 160, \r\n          \"2019-03-12T18:00:00\": 160, \r\n          \"2019-03-12T19:00:00\": 160, \r\n          \"2019-03-12T20:00:00\": 160, \r\n          \"2019-03-12T21:00:00\": 160, \r\n          \"2019-03-12T22:00:00\": 160, \r\n          \"2019-03-12T23:00:00\": 160, \r\n          \"2019-03-13T00:00:00\": 160, \r\n          \"2019-03-13T01:00:00\": 160, \r\n          \"2019-03-13T02:00:00\": 160, \r\n          \"2019-03-13T04:00:00\": 150, \r\n          \"2019-03-13T05:00:00\": 150, \r\n          \"2019-03-13T06:00:00\": 150, \r\n          \"2019-03-13T07:00:00\": 150, \r\n          \"2019-03-13T08:00:00\": 150, \r\n          \"2019-03-13T11:00:00\": 130, \r\n          \"2019-03-13T12:00:00\": 130, \r\n          \"2019-03-13T13:00:00\": 130, \r\n          \"2019-03-13T14:00:00\": 130, \r\n          \"2019-03-13T15:00:00\": 130, \r\n          \"2019-03-13T16:00:00\": 130, \r\n          \"2019-03-13T17:00:00\": 130, \r\n          \"2019-03-13T18:00:00\": 130, \r\n          \"2019-03-13T19:00:00\": 140, \r\n          \"2019-03-13T20:00:00\": 140, \r\n          \"2019-03-13T21:00:00\": 150, \r\n          \"2019-03-13T22:00:00\": 150, \r\n          \"2019-03-13T23:00:00\": 150\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.9615384615384616, \r\n            \"error_threshold\": 45, \r\n            \"n\": 52\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 17.88461538461539, \r\n            \"n\": 52\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 15.576923076923075, \r\n            \"n\": 52\r\n          }\r\n        }\r\n      }, \r\n      \"2\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {\r\n          \"2019-03-12T00:00:00\": 120, \r\n          \"2019-03-12T01:00:00\": 120, \r\n          \"2019-03-12T02:00:00\": 130, \r\n          \"2019-03-12T03:00:00\": 140, \r\n          \"2019-03-12T04:00:00\": 140, \r\n          \"2019-03-12T06:00:00\": 140, \r\n          \"2019-03-12T07:00:00\": 140, \r\n          \"2019-03-12T08:00:00\": 150, \r\n          \"2019-03-12T09:00:00\": 150, \r\n          \"2019-03-12T10:00:00\": 150, \r\n          \"2019-03-12T11:00:00\": 140, \r\n          \"2019-03-12T12:00:00\": 140, \r\n          \"2019-03-12T13:00:00\": 140, \r\n          \"2019-03-12T14:00:00\": 150, \r\n          \"2019-03-12T15:00:00\": 150, \r\n          \"2019-03-12T16:00:00\": 150, \r\n          \"2019-03-12T17:00:00\": 150, \r\n          \"2019-03-12T18:00:00\": 150, \r\n          \"2019-03-12T19:00:00\": 150, \r\n          \"2019-03-12T20:00:00\": 160, \r\n          \"2019-03-12T21:00:00\": 160, \r\n          \"2019-03-12T22:00:00\": 160, \r\n          \"2019-03-12T23:00:00\": 150, \r\n          \"2019-03-13T12:00:00\": 130, \r\n          \"2019-03-13T13:00:00\": 130, \r\n          \"2019-03-13T14:00:00\": 130, \r\n          \"2019-03-13T15:00:00\": 130, \r\n          \"2019-03-13T16:00:00\": 130, \r\n          \"2019-03-13T17:00:00\": 130, \r\n          \"2019-03-13T18:00:00\": 120, \r\n          \"2019-03-13T19:00:00\": 130, \r\n          \"2019-03-13T20:00:00\": 140, \r\n          \"2019-03-13T21:00:00\": 140, \r\n          \"2019-03-13T22:00:00\": 140, \r\n          \"2019-03-13T23:00:00\": 150\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 1.0, \r\n            \"error_threshold\": 45, \r\n            \"n\": 35\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 14.0, \r\n            \"n\": 35\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 9.428571428571429, \r\n            \"n\": 35\r\n          }\r\n        }\r\n      }, \r\n      \"3\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {\r\n          \"2019-03-13T00:00:00\": 150, \r\n          \"2019-03-13T01:00:00\": 160, \r\n          \"2019-03-13T02:00:00\": 160, \r\n          \"2019-03-13T04:00:00\": 160, \r\n          \"2019-03-13T05:00:00\": 160, \r\n          \"2019-03-13T06:00:00\": 160, \r\n          \"2019-03-13T07:00:00\": 150, \r\n          \"2019-03-13T08:00:00\": 150, \r\n          \"2019-03-13T11:00:00\": 140, \r\n          \"2019-03-13T12:00:00\": 130, \r\n          \"2019-03-13T13:00:00\": 130, \r\n          \"2019-03-13T14:00:00\": 130, \r\n          \"2019-03-13T15:00:00\": 120, \r\n          \"2019-03-13T16:00:00\": 120, \r\n          \"2019-03-13T17:00:00\": 120, \r\n          \"2019-03-13T18:00:00\": 120, \r\n          \"2019-03-13T19:00:00\": 120, \r\n          \"2019-03-13T20:00:00\": 110, \r\n          \"2019-03-13T21:00:00\": 100, \r\n          \"2019-03-13T22:00:00\": 110, \r\n          \"2019-03-13T23:00:00\": 140\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 1.0, \r\n            \"error_threshold\": 45, \r\n            \"n\": 21\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 15.714285714285714, \r\n            \"n\": 21\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.47619047619047616, \r\n            \"n\": 21\r\n          }\r\n        }\r\n      }, \r\n      \"4\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 45, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"5\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 45, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"6\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 45, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"7\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 45, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    \"metadata\": {\r\n      \"display_name\": \"Wind Direction\", \r\n      \"error_threshold\": 45, \r\n      \"prop_name\": \"wind_dir\", \r\n      \"units\": \"degrees \"\r\n    }, \r\n    \"obs\": {\r\n      \"2019-03-10T00:00:00\": 300, \r\n      \"2019-03-10T01:00:00\": 290, \r\n      \"2019-03-10T02:00:00\": 310, \r\n      \"2019-03-10T03:00:00\": 310, \r\n      \"2019-03-10T04:00:00\": 300, \r\n      \"2019-03-10T05:00:00\": 310, \r\n      \"2019-03-10T06:00:00\": 320, \r\n      \"2019-03-10T07:00:00\": 310, \r\n      \"2019-03-10T08:00:00\": 320, \r\n      \"2019-03-10T09:00:00\": 320, \r\n      \"2019-03-10T10:00:00\": 320, \r\n      \"2019-03-10T11:00:00\": 310, \r\n      \"2019-03-10T12:00:00\": 290, \r\n      \"2019-03-10T13:00:00\": 240, \r\n      \"2019-03-10T14:00:00\": 300, \r\n      \"2019-03-10T15:00:00\": 300, \r\n      \"2019-03-10T16:00:00\": 290, \r\n      \"2019-03-10T17:00:00\": 290, \r\n      \"2019-03-10T18:00:00\": 300, \r\n      \"2019-03-10T19:00:00\": 310, \r\n      \"2019-03-10T20:00:00\": 300, \r\n      \"2019-03-10T21:00:00\": 290, \r\n      \"2019-03-10T23:00:00\": 220, \r\n      \"2019-03-11T00:00:00\": 250, \r\n      \"2019-03-11T06:00:00\": 160, \r\n      \"2019-03-11T15:00:00\": 150, \r\n      \"2019-03-11T16:00:00\": 160, \r\n      \"2019-03-11T17:00:00\": 180, \r\n      \"2019-03-11T18:00:00\": 160, \r\n      \"2019-03-11T20:00:00\": 140, \r\n      \"2019-03-11T21:00:00\": 160, \r\n      \"2019-03-11T22:00:00\": 140, \r\n      \"2019-03-11T23:00:00\": 150, \r\n      \"2019-03-12T00:00:00\": 150, \r\n      \"2019-03-12T01:00:00\": 140, \r\n      \"2019-03-12T02:00:00\": 110, \r\n      \"2019-03-12T03:00:00\": 130, \r\n      \"2019-03-12T04:00:00\": 110, \r\n      \"2019-03-12T06:00:00\": 130, \r\n      \"2019-03-12T07:00:00\": 140, \r\n      \"2019-03-12T08:00:00\": 130, \r\n      \"2019-03-12T09:00:00\": 120, \r\n      \"2019-03-12T10:00:00\": 150, \r\n      \"2019-03-12T11:00:00\": 140, \r\n      \"2019-03-12T12:00:00\": 140, \r\n      \"2019-03-12T13:00:00\": 130, \r\n      \"2019-03-12T14:00:00\": 130, \r\n      \"2019-03-12T15:00:00\": 130, \r\n      \"2019-03-12T16:00:00\": 130, \r\n      \"2019-03-12T17:00:00\": 130, \r\n      \"2019-03-12T18:00:00\": 130, \r\n      \"2019-03-12T19:00:00\": 140, \r\n      \"2019-03-12T20:00:00\": 140, \r\n      \"2019-03-12T21:00:00\": 140, \r\n      \"2019-03-12T22:00:00\": 120, \r\n      \"2019-03-12T23:00:00\": 130, \r\n      \"2019-03-13T00:00:00\": 130, \r\n      \"2019-03-13T01:00:00\": 120, \r\n      \"2019-03-13T02:00:00\": 150, \r\n      \"2019-03-13T04:00:00\": 140, \r\n      \"2019-03-13T05:00:00\": 150, \r\n      \"2019-03-13T06:00:00\": 150, \r\n      \"2019-03-13T07:00:00\": 170, \r\n      \"2019-03-13T08:00:00\": 140, \r\n      \"2019-03-13T11:00:00\": 120, \r\n      \"2019-03-13T12:00:00\": 120, \r\n      \"2019-03-13T13:00:00\": 120, \r\n      \"2019-03-13T14:00:00\": 120, \r\n      \"2019-03-13T15:00:00\": 130, \r\n      \"2019-03-13T16:00:00\": 120, \r\n      \"2019-03-13T17:00:00\": 120, \r\n      \"2019-03-13T18:00:00\": 130, \r\n      \"2019-03-13T19:00:00\": 140, \r\n      \"2019-03-13T20:00:00\": 130, \r\n      \"2019-03-13T21:00:00\": 140, \r\n      \"2019-03-13T22:00:00\": 150, \r\n      \"2019-03-13T23:00:00\": 140\r\n    }\r\n  }, \r\n  \"wind_speed\": {\r\n    \"cumulative_stats\": {\r\n      \"accuracy\": {\r\n        \"accuracy\": 0.7045454545454546, \r\n        \"error_threshold\": 1.34, \r\n        \"n\": 132\r\n      }, \r\n      \"ave_error\": {\r\n        \"error\": 0.8945449696969696, \r\n        \"n\": 132\r\n      }, \r\n      \"bias\": {\r\n        \"bias\": 0.318162, \r\n        \"n\": 132\r\n      }\r\n    }, \r\n    \"lead_days\": {\r\n      \"1\": {\r\n        \"errors\": {\r\n          \"2019-03-11T16:00:00\": -2.0711120000000003, \r\n          \"2019-03-11T23:00:00\": -1.542224, \r\n          \"2019-03-12T21:00:00\": 2.015552, \r\n          \"2019-03-13T01:00:00\": 2.101108, \r\n          \"2019-03-13T02:00:00\": 1.5011079999999999, \r\n          \"2019-03-13T03:00:00\": 2.101108, \r\n          \"2019-03-13T06:00:00\": 1.5011079999999999, \r\n          \"2019-03-13T07:00:00\": 2.101108, \r\n          \"2019-03-13T08:00:00\": -1.5277799999999995, \r\n          \"2019-03-13T09:00:00\": 1.5866639999999999, \r\n          \"2019-03-13T10:00:00\": 1.5866639999999999, \r\n          \"2019-03-13T11:00:00\": 1.5866639999999999, \r\n          \"2019-03-13T13:00:00\": 1.515552, \r\n          \"2019-03-13T23:00:00\": -1.5411159999999997\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-11T00:00:00\": 1.028888, \r\n          \"2019-03-11T01:00:00\": 0.514444, \r\n          \"2019-03-11T02:00:00\": 1.028888, \r\n          \"2019-03-11T03:00:00\": 1.028888, \r\n          \"2019-03-11T04:00:00\": 1.028888, \r\n          \"2019-03-11T05:00:00\": 0.514444, \r\n          \"2019-03-11T06:00:00\": 0.514444, \r\n          \"2019-03-11T07:00:00\": 0.514444, \r\n          \"2019-03-11T08:00:00\": 1.028888, \r\n          \"2019-03-11T09:00:00\": 1.543332, \r\n          \"2019-03-11T10:00:00\": 1.543332, \r\n          \"2019-03-11T11:00:00\": 1.543332, \r\n          \"2019-03-11T12:00:00\": 1.028888, \r\n          \"2019-03-11T13:00:00\": 1.028888, \r\n          \"2019-03-11T14:00:00\": 1.028888, \r\n          \"2019-03-11T15:00:00\": 1.028888, \r\n          \"2019-03-11T16:00:00\": 1.028888, \r\n          \"2019-03-11T17:00:00\": 1.543332, \r\n          \"2019-03-11T18:00:00\": 1.543332, \r\n          \"2019-03-11T19:00:00\": 1.543332, \r\n          \"2019-03-11T20:00:00\": 1.543332, \r\n          \"2019-03-11T21:00:00\": 1.543332, \r\n          \"2019-03-11T22:00:00\": 1.543332, \r\n          \"2019-03-11T23:00:00\": 2.057776, \r\n          \"2019-03-12T12:00:00\": 2.57222, \r\n          \"2019-03-12T13:00:00\": 3.086664, \r\n          \"2019-03-12T14:00:00\": 3.086664, \r\n          \"2019-03-12T15:00:00\": 3.086664, \r\n          \"2019-03-12T16:00:00\": 3.601108, \r\n          \"2019-03-12T17:00:00\": 3.601108, \r\n          \"2019-03-12T18:00:00\": 3.601108, \r\n          \"2019-03-12T19:00:00\": 4.115552, \r\n          \"2019-03-12T20:00:00\": 4.115552, \r\n          \"2019-03-12T21:00:00\": 4.115552, \r\n          \"2019-03-12T22:00:00\": 4.115552, \r\n          \"2019-03-12T23:00:00\": 3.601108, \r\n          \"2019-03-13T00:00:00\": 3.601108, \r\n          \"2019-03-13T01:00:00\": 3.601108, \r\n          \"2019-03-13T02:00:00\": 3.601108, \r\n          \"2019-03-13T03:00:00\": 3.601108, \r\n          \"2019-03-13T04:00:00\": 3.086664, \r\n          \"2019-03-13T05:00:00\": 2.57222, \r\n          \"2019-03-13T06:00:00\": 2.57222, \r\n          \"2019-03-13T07:00:00\": 2.57222, \r\n          \"2019-03-13T08:00:00\": 3.086664, \r\n          \"2019-03-13T09:00:00\": 3.086664, \r\n          \"2019-03-13T10:00:00\": 3.086664, \r\n          \"2019-03-13T11:00:00\": 3.086664, \r\n          \"2019-03-13T12:00:00\": 4.115552, \r\n          \"2019-03-13T13:00:00\": 4.115552, \r\n          \"2019-03-13T14:00:00\": 5.6588840000000005, \r\n          \"2019-03-13T15:00:00\": 5.6588840000000005, \r\n          \"2019-03-13T16:00:00\": 6.173328, \r\n          \"2019-03-13T17:00:00\": 6.687772, \r\n          \"2019-03-13T18:00:00\": 6.687772, \r\n          \"2019-03-13T19:00:00\": 6.687772, \r\n          \"2019-03-13T20:00:00\": 6.173328, \r\n          \"2019-03-13T21:00:00\": 6.173328, \r\n          \"2019-03-13T22:00:00\": 5.6588840000000005, \r\n          \"2019-03-13T23:00:00\": 5.6588840000000005\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.7222222222222222, \r\n            \"error_threshold\": 1.34, \r\n            \"n\": 72\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.7759101666666667, \r\n            \"n\": 72\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.25603149999999997, \r\n            \"n\": 72\r\n          }\r\n        }\r\n      }, \r\n      \"2\": {\r\n        \"errors\": {\r\n          \"2019-03-12T09:00:00\": 1.5866639999999999, \r\n          \"2019-03-12T16:00:00\": 1.515552, \r\n          \"2019-03-12T21:00:00\": 2.015552, \r\n          \"2019-03-13T13:00:00\": 1.515552, \r\n          \"2019-03-13T20:00:00\": 1.5022159999999998, \r\n          \"2019-03-13T22:00:00\": 1.5022159999999998\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-12T00:00:00\": 2.057776, \r\n          \"2019-03-12T01:00:00\": 2.057776, \r\n          \"2019-03-12T02:00:00\": 2.057776, \r\n          \"2019-03-12T03:00:00\": 2.057776, \r\n          \"2019-03-12T04:00:00\": 2.057776, \r\n          \"2019-03-12T05:00:00\": 2.057776, \r\n          \"2019-03-12T06:00:00\": 2.057776, \r\n          \"2019-03-12T07:00:00\": 2.57222, \r\n          \"2019-03-12T08:00:00\": 2.57222, \r\n          \"2019-03-12T09:00:00\": 3.086664, \r\n          \"2019-03-12T10:00:00\": 3.086664, \r\n          \"2019-03-12T11:00:00\": 3.086664, \r\n          \"2019-03-12T12:00:00\": 3.086664, \r\n          \"2019-03-12T13:00:00\": 3.601108, \r\n          \"2019-03-12T14:00:00\": 4.115552, \r\n          \"2019-03-12T15:00:00\": 4.115552, \r\n          \"2019-03-12T16:00:00\": 4.115552, \r\n          \"2019-03-12T17:00:00\": 4.115552, \r\n          \"2019-03-12T18:00:00\": 4.115552, \r\n          \"2019-03-12T19:00:00\": 4.115552, \r\n          \"2019-03-12T20:00:00\": 4.115552, \r\n          \"2019-03-12T21:00:00\": 4.115552, \r\n          \"2019-03-12T22:00:00\": 4.115552, \r\n          \"2019-03-12T23:00:00\": 4.115552, \r\n          \"2019-03-13T12:00:00\": 3.601108, \r\n          \"2019-03-13T13:00:00\": 4.115552, \r\n          \"2019-03-13T14:00:00\": 5.14444, \r\n          \"2019-03-13T15:00:00\": 5.6588840000000005, \r\n          \"2019-03-13T16:00:00\": 6.173328, \r\n          \"2019-03-13T17:00:00\": 6.687772, \r\n          \"2019-03-13T18:00:00\": 6.687772, \r\n          \"2019-03-13T19:00:00\": 7.202216, \r\n          \"2019-03-13T20:00:00\": 7.202216, \r\n          \"2019-03-13T21:00:00\": 7.202216, \r\n          \"2019-03-13T22:00:00\": 7.202216, \r\n          \"2019-03-13T23:00:00\": 6.687772\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.8333333333333335, \r\n            \"error_threshold\": 1.34, \r\n            \"n\": 36\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.7770357777777775, \r\n            \"n\": 36\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.514379111111111, \r\n            \"n\": 36\r\n          }\r\n        }\r\n      }, \r\n      \"3\": {\r\n        \"errors\": {\r\n          \"2019-03-13T01:00:00\": 2.615552, \r\n          \"2019-03-13T02:00:00\": 2.015552, \r\n          \"2019-03-13T03:00:00\": 2.615552, \r\n          \"2019-03-13T07:00:00\": 1.5866639999999999, \r\n          \"2019-03-13T09:00:00\": 2.101108, \r\n          \"2019-03-13T10:00:00\": 2.101108, \r\n          \"2019-03-13T11:00:00\": 2.101108, \r\n          \"2019-03-13T14:00:00\": -1.584448, \r\n          \"2019-03-13T17:00:00\": -1.5411159999999997, \r\n          \"2019-03-13T18:00:00\": -1.5266720000000005, \r\n          \"2019-03-13T19:00:00\": -1.5555599999999998, \r\n          \"2019-03-13T21:00:00\": -2.084448, \r\n          \"2019-03-13T23:00:00\": -1.5411159999999997\r\n        }, \r\n        \"fcasts\": {\r\n          \"2019-03-13T00:00:00\": 4.115552, \r\n          \"2019-03-13T01:00:00\": 4.115552, \r\n          \"2019-03-13T02:00:00\": 4.115552, \r\n          \"2019-03-13T03:00:00\": 4.115552, \r\n          \"2019-03-13T04:00:00\": 3.601108, \r\n          \"2019-03-13T05:00:00\": 3.601108, \r\n          \"2019-03-13T06:00:00\": 3.086664, \r\n          \"2019-03-13T07:00:00\": 3.086664, \r\n          \"2019-03-13T08:00:00\": 3.601108, \r\n          \"2019-03-13T09:00:00\": 3.601108, \r\n          \"2019-03-13T10:00:00\": 3.601108, \r\n          \"2019-03-13T11:00:00\": 3.601108, \r\n          \"2019-03-13T12:00:00\": 3.601108, \r\n          \"2019-03-13T13:00:00\": 3.601108, \r\n          \"2019-03-13T14:00:00\": 4.115552, \r\n          \"2019-03-13T15:00:00\": 4.629996, \r\n          \"2019-03-13T16:00:00\": 5.14444, \r\n          \"2019-03-13T17:00:00\": 5.6588840000000005, \r\n          \"2019-03-13T18:00:00\": 6.173328, \r\n          \"2019-03-13T19:00:00\": 5.14444, \r\n          \"2019-03-13T20:00:00\": 4.629996, \r\n          \"2019-03-13T21:00:00\": 4.115552, \r\n          \"2019-03-13T22:00:00\": 4.629996, \r\n          \"2019-03-13T23:00:00\": 5.6588840000000005\r\n        }, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.4583333333333333, \r\n            \"error_threshold\": 1.34, \r\n            \"n\": 24\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 1.4267131666666666, \r\n            \"n\": 24\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.21022783333333314, \r\n            \"n\": 24\r\n          }\r\n        }\r\n      }, \r\n      \"4\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.34, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"5\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.34, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"6\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.34, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }, \r\n      \"7\": {\r\n        \"errors\": {}, \r\n        \"fcasts\": {}, \r\n        \"stats\": {\r\n          \"accuracy\": {\r\n            \"accuracy\": 0.0, \r\n            \"error_threshold\": 1.34, \r\n            \"n\": 0\r\n          }, \r\n          \"ave_error\": {\r\n            \"error\": 0.0, \r\n            \"n\": 0\r\n          }, \r\n          \"bias\": {\r\n            \"bias\": 0.0, \r\n            \"n\": 0\r\n          }\r\n        }\r\n      }\r\n    }, \r\n    \"metadata\": {\r\n      \"display_name\": \"Wind Speed\", \r\n      \"error_threshold\": 1.34, \r\n      \"prop_name\": \"wind_speed\", \r\n      \"units\": \"m/s\"\r\n    }, \r\n    \"obs\": {\r\n      \"2019-03-10T00:00:00\": 8.8, \r\n      \"2019-03-10T01:00:00\": 10.3, \r\n      \"2019-03-10T02:00:00\": 10.8, \r\n      \"2019-03-10T03:00:00\": 11.8, \r\n      \"2019-03-10T04:00:00\": 10.3, \r\n      \"2019-03-10T05:00:00\": 9.8, \r\n      \"2019-03-10T06:00:00\": 7.2, \r\n      \"2019-03-10T07:00:00\": 7.7, \r\n      \"2019-03-10T08:00:00\": 6.2, \r\n      \"2019-03-10T09:00:00\": 7.7, \r\n      \"2019-03-10T10:00:00\": 5.7, \r\n      \"2019-03-10T11:00:00\": 3.6, \r\n      \"2019-03-10T12:00:00\": 4.1, \r\n      \"2019-03-10T13:00:00\": 2.6, \r\n      \"2019-03-10T14:00:00\": 4.1, \r\n      \"2019-03-10T15:00:00\": 7.7, \r\n      \"2019-03-10T16:00:00\": 6.2, \r\n      \"2019-03-10T17:00:00\": 5.7, \r\n      \"2019-03-10T18:00:00\": 4.6, \r\n      \"2019-03-10T19:00:00\": 2.6, \r\n      \"2019-03-10T20:00:00\": 3.1, \r\n      \"2019-03-10T21:00:00\": 2.6, \r\n      \"2019-03-10T22:00:00\": 0.0, \r\n      \"2019-03-10T23:00:00\": 1.5, \r\n      \"2019-03-11T00:00:00\": 1.5, \r\n      \"2019-03-11T01:00:00\": 0.0, \r\n      \"2019-03-11T02:00:00\": 0.0, \r\n      \"2019-03-11T03:00:00\": 0.0, \r\n      \"2019-03-11T04:00:00\": 0.0, \r\n      \"2019-03-11T05:00:00\": 0.0, \r\n      \"2019-03-11T06:00:00\": 1.5, \r\n      \"2019-03-11T07:00:00\": 0.0, \r\n      \"2019-03-11T08:00:00\": 0.0, \r\n      \"2019-03-11T09:00:00\": 0.0, \r\n      \"2019-03-11T10:00:00\": 0.0, \r\n      \"2019-03-11T11:00:00\": 0.0, \r\n      \"2019-03-11T12:00:00\": 0.0, \r\n      \"2019-03-11T13:00:00\": 0.0, \r\n      \"2019-03-11T14:00:00\": 0.0, \r\n      \"2019-03-11T15:00:00\": 1.5, \r\n      \"2019-03-11T16:00:00\": 3.1, \r\n      \"2019-03-11T17:00:00\": 2.1, \r\n      \"2019-03-11T18:00:00\": 2.6, \r\n      \"2019-03-11T19:00:00\": 0.0, \r\n      \"2019-03-11T20:00:00\": 2.6, \r\n      \"2019-03-11T21:00:00\": 2.6, \r\n      \"2019-03-11T22:00:00\": 2.6, \r\n      \"2019-03-11T23:00:00\": 3.6, \r\n      \"2019-03-12T00:00:00\": 2.6, \r\n      \"2019-03-12T01:00:00\": 1.5, \r\n      \"2019-03-12T02:00:00\": 1.5, \r\n      \"2019-03-12T03:00:00\": 1.5, \r\n      \"2019-03-12T04:00:00\": 1.5, \r\n      \"2019-03-12T05:00:00\": 0.0, \r\n      \"2019-03-12T06:00:00\": 1.5, \r\n      \"2019-03-12T07:00:00\": 1.5, \r\n      \"2019-03-12T08:00:00\": 1.5, \r\n      \"2019-03-12T09:00:00\": 1.5, \r\n      \"2019-03-12T10:00:00\": 2.1, \r\n      \"2019-03-12T11:00:00\": 3.6, \r\n      \"2019-03-12T12:00:00\": 3.6, \r\n      \"2019-03-12T13:00:00\": 4.1, \r\n      \"2019-03-12T14:00:00\": 3.1, \r\n      \"2019-03-12T15:00:00\": 3.6, \r\n      \"2019-03-12T16:00:00\": 2.6, \r\n      \"2019-03-12T17:00:00\": 3.6, \r\n      \"2019-03-12T18:00:00\": 3.6, \r\n      \"2019-03-12T19:00:00\": 3.6, \r\n      \"2019-03-12T20:00:00\": 3.6, \r\n      \"2019-03-12T21:00:00\": 2.1, \r\n      \"2019-03-12T22:00:00\": 3.1, \r\n      \"2019-03-12T23:00:00\": 3.1, \r\n      \"2019-03-13T00:00:00\": 3.6, \r\n      \"2019-03-13T01:00:00\": 1.5, \r\n      \"2019-03-13T02:00:00\": 2.1, \r\n      \"2019-03-13T03:00:00\": 0.0, \r\n      \"2019-03-13T04:00:00\": 2.6, \r\n      \"2019-03-13T05:00:00\": 2.6, \r\n      \"2019-03-13T06:00:00\": 2.1, \r\n      \"2019-03-13T07:00:00\": 1.5, \r\n      \"2019-03-13T08:00:00\": 4.1, \r\n      \"2019-03-13T09:00:00\": 0.0, \r\n      \"2019-03-13T10:00:00\": 0.0, \r\n      \"2019-03-13T11:00:00\": 1.5, \r\n      \"2019-03-13T12:00:00\": 3.6, \r\n      \"2019-03-13T13:00:00\": 2.6, \r\n      \"2019-03-13T14:00:00\": 5.7, \r\n      \"2019-03-13T15:00:00\": 5.7, \r\n      \"2019-03-13T16:00:00\": 6.2, \r\n      \"2019-03-13T17:00:00\": 7.2, \r\n      \"2019-03-13T18:00:00\": 7.7, \r\n      \"2019-03-13T19:00:00\": 6.7, \r\n      \"2019-03-13T20:00:00\": 5.7, \r\n      \"2019-03-13T21:00:00\": 6.2, \r\n      \"2019-03-13T22:00:00\": 5.7, \r\n      \"2019-03-13T23:00:00\": 7.2\r\n    }\r\n  }\r\n}`;","import React, {\n  useState, useCallback, useMemo,\n} from 'react';\n\nimport {\n  Container, Row, Col, Button, Tabs, Tab,\n} from 'react-bootstrap';\n\nimport {\n  VictoryChart,\n  VictoryAxis,\n  VictoryArea,\n  VictoryGroup,\n  VictoryLabel,\n  VictoryLine,\n  VictoryLegend,\n  VictoryVoronoiContainer,\n} from 'victory';\n\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\n\nimport './App.css';\n\nimport { getDaysAgo, getISODate } from './dateUtilities';\nimport { testData } from './testData';\n\nconst API_URL = '_self' in React.createElement('div')\n  ? 'https://weather2019.appspot.com/OAX/forecasts/analyze?'\n  : '/OAX/forecasts/analyze?';\n\nfunction ForecastDayPicker({ label, onChange, ...rest }) {\n  const [warned, setWarned] = useState(false);\n\n  return (\n    <Col className='pb-3'>\n      <Row>\n        <Col>\n          <label>\n            {`${label}:`}\n          </label>\n          <span className={'advisory float-right text-danger'}>\n            {` ${warned ? 'Check date.' : ''}`}\n          </span>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DayPickerInput\n            {...rest}\n            onDayChange={(day, mod) => {\n              if (!day || (mod.disabled && !warned)) {\n                setWarned(true);\n              } else if (day && !mod.disabled) {\n                if (warned) {\n                  setWarned(false);\n                }\n                onChange(day);\n              }\n            }}\n            dayPickerProps={{\n              disabledDays: {\n                before: new Date(2019, 1, 1),\n                after: getDaysAgo(2),\n              },\n            }}\n          />\n        </Col>\n      </Row>\n    </Col>\n  );\n}\n\nfunction DateRangeForm({ onFetch }) {\n  const [start, setStart] = useState(getDaysAgo(10));\n  const [end, setEnd] = useState(getDaysAgo(3));\n\n  const fetchReturn = () => (\n    onFetch(fetch(`${API_URL}start=${getISODate(start)}&end=${getISODate(end)}`))\n  );\n\n  return (\n    <Container className='pb-3'>\n      <Row className='d-flex justify-content-center'>\n        <Col xs={'auto'}>\n          <ForecastDayPicker\n            label={'Start'}\n            value={start}\n            onChange={setStart}\n          />\n        </Col>\n        <Col xs={'auto'}>\n          <ForecastDayPicker\n            label={'End'}\n            value={end}\n            onChange={setEnd}\n          />\n        </Col>\n        <Col md={2} className='d-flex align-self-center justify-content-center mt-3'>\n          <Button\n            onClick={fetchReturn}\n          >\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nfunction getActiveFcastsAndChartedData(analysis, activeDay) {\n  const chartedData = [];\n  const activeFcasts = activeDay ? [activeDay] : Object.keys(analysis.lead_days);\n\n  // Add forecasts lines\n  chartedData.push(\n    <VictoryGroup displayName='Forecast' key='Forecast' color='red'>\n      {\n        activeFcasts.map((leadDay, i) => (\n          <VictoryLine\n            displayName={`${leadDay}-Day`}\n            name={`${leadDay}-Day`}\n            key={leadDay}\n            data={Object.entries(analysis.lead_days[leadDay].fcasts)}\n            x={(datum) => new Date(datum[0])}\n            y={1}\n            style={{\n              data: {\n                opacity: i >= 1 ? (9 - i) / 10 : 1.0,\n              },\n            }}\n          />\n        ))\n      }\n    </VictoryGroup>,\n  );\n\n  // Add observed weather line\n  chartedData.push(\n    <VictoryGroup displayName='Actual' key='Actual' color='black'>\n      <VictoryLine\n        displayName='Actual'\n        name='Actual'\n        data={Object.entries(analysis.obs)}\n        x={(datum) => new Date(datum[0])}\n        y={1}\n      />\n    </VictoryGroup>,\n  );\n\n  const erreas = [];\n  if (activeDay) {\n    erreas.push(\n      ...Object.entries(analysis.lead_days[activeDay].errors).reduce(\n        // Create data for error VictoryAreas and organize into contiguous areas.\n        (erreas, [timeStr, amount]) => {\n          const time = new Date(timeStr);\n          const erreaDatum = {\n            x: time,\n            y: analysis.lead_days[activeDay].fcasts[timeStr],\n            y0: analysis.obs[timeStr],\n            amount,\n          };\n\n          const lastErrea = erreas.length > 0 ? erreas[erreas.length - 1] : false;\n          if (\n            lastErrea\n            && lastErrea.slice(-1)[0].x.valueOf() === time.valueOf() - 3600000\n          ) {\n            lastErrea.push(erreaDatum);\n          } else {\n            erreas.push([erreaDatum]);\n          }\n\n          return erreas;\n        },\n        [],\n      ).map((errea, i) => (\n        <VictoryArea\n            displayName={`Error-Area-${i}`}\n            name={`Error-Area-${i}`}\n            data={errea}\n            key={`Error-Area-${i}`}\n        />\n      )),\n    );\n  }\n\n  // Add error areas.\n  chartedData.push(\n    <VictoryGroup\n      displayName='Error' key='Error'\n      style={{\n        data: {\n          opacity: 0.4,\n          fill: 'magenta',\n          stroke: 'magenta',\n        },\n        legendSymbol: { type: 'square' },\n      }}\n    >\n      {erreas}\n    </VictoryGroup>,\n  );\n\n  return [activeFcasts, chartedData];\n}\n\nfunction getLegendData(analysis, chartedGroups) {\n  const legendData = [];\n  const forecastGroup = chartedGroups.find((group) => group.props.displayName === 'Forecast');\n  const otherGroups = chartedGroups.filter((group) => group.props.displayName !== 'Forecast');\n\n  // Always add all forcasts available so they can be clicked to be activated.\n  legendData.push(\n    ...Object.keys(analysis.lead_days).map((day) => {\n      const dayLabel = `${day}-Day`;\n\n      // Find line if forecast lead-day is displayed and record styles to use.\n      const line = forecastGroup.props.children.find(\n        (child) => child.props.name === dayLabel,\n      );\n      const style = line && { ...line.props.theme.line.style, ...line.props.style };\n\n      return {\n        name: `${day}-Day`,\n        symbol: {\n          opacity: line ? style.data.opacity : 0.1,\n          fill: forecastGroup.props.color,\n          cursor: 'pointer',\n        },\n        labels: {\n          opacity: line ? 1 : 0.2,\n          cursor: 'pointer',\n        },\n      };\n    }),\n  );\n\n  // Add other groups and style as active or inactive based on weather the actually have any\n  // charted data.\n  legendData.push(\n    ...otherGroups.map(\n      (group) => {\n        const style = { ...group.props.theme.line.style, ...group.props.style };\n        const isCharted = group.props.children.length !== 0;\n        return {\n          name: group.props.displayName,\n          symbol: {\n            opacity: isCharted ? style.data.opacity : 0.2,\n            fill: style.data.stroke,\n            cursor: 'pointer',\n            type: style.legendSymbol && style.legendSymbol.type ? style.legendSymbol.type : 'circle',\n          },\n          labels: {\n            opacity: isCharted ? 1 : 0.2,\n            cursor: 'pointer',\n          },\n        };\n      },\n    ),\n  );\n\n  return legendData;\n}\n\nconst ForecastChart = ({ analysis, activeDay, onChange }) => {\n  const [activeFcasts, chartedData] = getActiveFcastsAndChartedData(analysis, activeDay);\n  const legendData = getLegendData(analysis, chartedData);\n\n  const toggleDisplayed = (labelName) => {\n    const allFcastDays = Object.keys(analysis.lead_days);\n    const [day] = labelName.split('-Day');\n    let newActiveDay = false;\n    if (!activeDay) {\n      if (labelName.includes('Error')) {\n        [newActiveDay] = activeFcasts;\n      } else if (allFcastDays.includes(day)) {\n        newActiveDay = day;\n      }\n    } else if (labelName === 'Actual' || activeFcasts.includes(day)) {\n      newActiveDay = null;\n    } else if (allFcastDays.includes(day)) {\n      newActiveDay = day;\n    }\n    onChange(newActiveDay, []);\n  };\n\n  return (\n    <Container className='pt-3'>\n      <Row>\n        <ErrorStatsDisplay\n          activeDay={activeDay}\n          analysis={analysis}\n        />\n      </Row>\n      <Row>\n        <VictoryChart scale={{ x: 'time' }} domainPadding={{ y: 20 }}\n          padding={{\n            top: 25, bottom: 50, left: 50, right: 75,\n          }}\n          containerComponent={\n            <VictoryVoronoiContainer\n              voronoiDimension='x'\n              labels={() => null}\n              labelComponent={<Cursor />}\n              onActivated={(points) => onChange(false, points)}\n            />\n          }\n        >\n          <VictoryLegend x={25} y={10}\n            orientation='horizontal'\n            borderPadding={{\n              top: 0, bottom: 0, left: 5, right: 0,\n            }}\n            gutter={10}\n            symbolSpacer={5}\n            style={{ labels: { fontSize: 9 } }}\n            data={ legendData }\n            toggleDisplayed={toggleDisplayed}\n            events={[{\n              eventHandlers: {\n                onClick: (evt, target, i, legend) => {\n                  if (target && target.datum) {\n                    legend.props.toggleDisplayed(target.datum.name);\n                  }\n                },\n              },\n            }]}\n          />\n\n          <VictoryAxis\n            tickCount={6}\n            tickFormat={(dateTime) => {\n              const date = `${dateTime.getMonth() + 1}/${dateTime.getDate()}`;\n              const time = dateTime.toLocaleTimeString().split(/[:\\s]/);\n              return dateTime.getHours() ? `${time[0]} ${time.slice(-1)}` : date;\n            }}\n            style={{\n              ticks: { stroke: 'black', size: 5 },\n              tickLabels: { fontSize: 12 },\n              grid: { stroke: 'grey' },\n            }}\n            offsetY={50}\n          />\n          <VictoryAxis\n            dependentAxis\n            crossAxis={false}\n            style={{\n              grid: { stroke: 'grey' },\n              tickLabels: { fontSize: 12 },\n            }}\n            label={analysis.metadata.units}\n            axisLabelComponent={<VictoryLabel dx={-15} angle={0} />}\n          />\n\n          {chartedData}\n\n        </VictoryChart>\n      </Row>\n    </Container>\n  );\n};\n\nfunction ErrorStatsDisplay({ analysis, activeDay }) {\n  const activeDayDisplayText = !activeDay ? 'Cumulative' : `${activeDay}-Day`;\n  const stats = !activeDay ? analysis.cumulative_stats : analysis.lead_days[activeDay].stats;\n\n  return (\n    <Container>\n      <Row className='d-flex justify-content-center'>\n        <h6>\n          {`Forecast Accuracy: ${activeDayDisplayText}`}\n        </h6>\n      </Row>\n      <Row className='d-flex justify-content-center'>\n          {\n            Object.keys(stats).map((type) => (\n              Object.keys(stats[type]).map((prop) => {\n                if (type.includes(prop)) {\n                  return (\n                    <LabeledValue\n                     label={type}\n                     value={stats[type][prop]}\n                     units={analysis.metadata.units}\n                     key={prop}\n                   />\n                  );\n                }\n                return false;\n              })\n            )).flat().filter(Boolean)\n          }\n      </Row>\n    </Container>\n  );\n}\n\nfunction Cursor({ x, scale }) {\n  const range = scale.y.range();\n  return (\n    <line\n      style={{\n        stroke: 'lightgrey',\n        strokeWidth: 1,\n      }}\n      x1={x}\n      x2={x}\n      y1={Math.max(...range)}\n      y2={Math.min(...range)}\n    />\n  );\n}\n\nconst MemodForecastChart = React.memo(ForecastChart);\n\nfunction AnalysisChart({ analysis }) {\n  const [activeFcastDay, setActiveFcastDay] = useState(null);\n  const [activeData, setActiveData] = useState([]);\n\n  const handleChange = useCallback(\n    (newActiveDay, newActiveData) => {\n      if (newActiveDay !== false) {\n        setActiveFcastDay(newActiveDay);\n      }\n      if (newActiveData) {\n        setActiveData(newActiveData);\n      }\n    },\n    [],\n  );\n\n  return (\n    <Container>\n      <Row>\n        <MemodForecastChart\n          analysis={analysis}\n          activeDay={activeFcastDay}\n          onChange={handleChange}\n        />\n      </Row>\n      <Row>\n        <ActiveDataDisplay\n          displayInfo={analysis.metadata}\n          data={activeData}\n        />\n      </Row>\n    </Container>\n  );\n}\n\nfunction toTitleCase(str) {\n  return (\n    str.replace(\n      /_/,\n      ' ',\n    ).replace(\n      /(?:(^|\\(|\"|\\s|-|,)\\w)\\w+/g,\n      (match) => (match === match.toUpperCase() ? match.toLowerCase() : match),\n    ).replace(\n      /(?:^|\\(|\"|\\s|-|,)\\w/g,\n      (match) => match.toUpperCase(),\n    )\n  );\n}\n\n/* * * Current Data Detail Display * * */\n\nfunction ActiveDataDisplay({ displayInfo, data }) {\n  if (!data || data.length === 0) {\n    return '';\n  }\n\n  const [date, time] = data[0]._x.toLocaleString({ dateStyle: 'short', timeStyle: 'short' })\n    .split(',');\n\n  const formattedData = [];\n  let formattedErrorDatum;\n  data.forEach((datum) => {\n    if (datum._y === null) {\n      return;\n    }\n\n    if (!datum.childName.includes('Error')) {\n      formattedData.push(\n        <LabeledValue\n          label={datum.childName}\n          value={datum._y}\n          units={displayInfo.units}\n          key={datum.childName}\n        />,\n      );\n    } else {\n      formattedErrorDatum = <LabeledValue\n          label='Forecast Error'\n          value={datum.amount}\n          units={displayInfo.units}\n          key='Forecast Error'\n          className='text-danger'\n        />;\n    }\n  });\n\n  if (formattedErrorDatum) {\n    formattedData.push(formattedErrorDatum);\n  }\n\n  return (\n    <Container className='h6 font-weight-normal'>\n      <Row className='d-flex justify-content-center pb-2'>\n        <Col>\n           {`${displayInfo.display_name} on ${date} at ${time}`}\n         </Col>\n      </Row>\n      <Row>\n        {formattedData}\n      </Row>\n    </Container>\n  );\n}\n\nfunction LabeledValue({\n  label, value, type, units, className,\n}) {\n  const formatForDisplay = (val, unit) => `${Math.round(val * 10) / 10} ${unit}`;\n  const valueType = (type || label).toLowerCase();\n\n  let formattedValue;\n  if (valueType === 'accuracy') {\n    formattedValue = formatForDisplay(value * 100.0, '%');\n  } else {\n    formattedValue = formatForDisplay(value, units);\n  }\n  return (\n    <span className={`mr-3 d-inline-block ${className}`}>\n      <span> {toTitleCase(label)}: </span>\n      <span className='font-weight-light ml-2'> {formattedValue} </span>\n    </span>\n  );\n}\n\n/* * * Main App * * */\n\nfunction AnalysisPage() {\n  const [weather, setWeather] = useState('temperature');\n  const [analysis, setAnalysis] = useState(JSON.parse(testData));\n  const [statusMessage, setStatusMessage] = useState('Select date range.');\n\n  // List of weather types Analysis chart is set-up to handle.\n  // TODO: Finish all and refator to something more appropriate.\n  const workingWeathers = ['temperature', 'dewpoint', 'wind_speed', 'cloud_cover', 'precip_6hr'];\n\n  return (\n    <Container>\n      <Row className='py-4'>\n        <DateRangeForm\n          onFetch={(request) => {\n            setStatusMessage('Retrieving...');\n            setAnalysis(null);\n            request.then((resp) => resp.json())\n              .then((json) => {\n                setAnalysis(json);\n              }).catch((error) => setStatusMessage(error.message));\n          }}\n        />\n      </Row>\n      {\n        analysis\n          ? (\n            <Row>\n              <Container>\n                <Tabs activeKey={weather} onSelect={(key) => setWeather(key)} justify className='h6'>\n                  {\n                    workingWeathers.map((weatherType) => (\n                      <Tab\n                        eventKey={analysis[weatherType].metadata.prop_name}\n                        title={analysis[weatherType].metadata.display_name}\n                        key={analysis[weatherType].metadata.prop_name}\n                      />\n                    ))\n                  }\n                </Tabs>\n              </Container>\n              <AnalysisChart\n                analysis={analysis[weather]}\n              />\n            </Row>\n          )\n          : <Row> {statusMessage} </Row>\n        }\n    </Container>\n  );\n}\n\nexport default AnalysisPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}